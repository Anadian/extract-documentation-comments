#!/usr/local/bin/node
'use strict';/**
* @module ExtractDocumentationComments
* @file extract-documentation-comments.js
* @alias source/main.js
* @description Simply extract documentation comments from a source file.
* @author Anadian
* @license 	Copyright 2020 Anadian
	Permission is hereby granted, free of charge, to any person obtaining a copy of this 
software and associated documentation files (the "Software"), to deal in the Software 
without restriction, including without limitation the rights to use, copy, modify, 
merge, publish, distribute, sublicense, and/or sell copies of the Software, and to 
permit persons to whom the Software is furnished to do so, subject to the following 
conditions:
	The above copyright notice and this permission notice shall be included in all copies 
or substantial portions of the Software.
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/ //#Dependencies
//##Internal
//##Standard
function cov_dszvcpt6v(){var path="/home/cameron/dev/extract-documentation-comments/source/main.js";var hash="36e14fabce23aba4e62650d9aa4b14cbc83e1bb0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/cameron/dev/extract-documentation-comments/source/main.js",statementMap:{"0":{start:{line:29,column:20},end:{line:29,column:33}},"1":{start:{line:31,column:19},end:{line:31,column:40}},"2":{start:{line:34,column:17},end:{line:34,column:52}},"3":{start:{line:35,column:20},end:{line:35,column:50}},"4":{start:{line:36,column:19},end:{line:36,column:21}},"5":{start:{line:37,column:19},end:{line:37,column:21}},"6":{start:{line:38,column:0},end:{line:42,column:1}},"7":{start:{line:39,column:1},end:{line:39,column:49}},"8":{start:{line:41,column:1},end:{line:41,column:30}},"9":{start:{line:46,column:13},end:{line:50,column:1}},"10":{start:{line:48,column:2},end:{line:48,column:14}},"11":{start:{line:61,column:20},end:{line:61,column:24}},"12":{start:{line:65,column:1},end:{line:77,column:2}},"13":{start:{line:66,column:2},end:{line:72,column:3}},"14":{start:{line:67,column:3},end:{line:71,column:5}},"15":{start:{line:69,column:5},end:{line:69,column:17}},"16":{start:{line:74,column:2},end:{line:74,column:67}},"17":{start:{line:75,column:2},end:{line:75,column:45}},"18":{start:{line:76,column:2},end:{line:76,column:21}},"19":{start:{line:80,column:1},end:{line:80,column:17}},"20":{start:{line:95,column:23},end:{line:95,column:44}},"21":{start:{line:98,column:13},end:{line:98,column:17}},"22":{start:{line:99,column:24},end:{line:99,column:28}},"23":{start:{line:100,column:21},end:{line:100,column:23}},"24":{start:{line:101,column:21},end:{line:101,column:23}},"25":{start:{line:102,column:23},end:{line:102,column:63}},"26":{start:{line:103,column:1},end:{line:103,column:156}},"27":{start:{line:106,column:1},end:{line:110,column:2}},"28":{start:{line:107,column:2},end:{line:107,column:71}},"29":{start:{line:108,column:2},end:{line:108,column:45}},"30":{start:{line:109,column:2},end:{line:109,column:21}},"31":{start:{line:112,column:1},end:{line:112,column:62}},"32":{start:{line:113,column:1},end:{line:113,column:50}},"33":{start:{line:114,column:1},end:{line:114,column:46}},"34":{start:{line:115,column:1},end:{line:115,column:153}},"35":{start:{line:116,column:1},end:{line:118,column:2}},"36":{start:{line:116,column:18},end:{line:116,column:19}},"37":{start:{line:117,column:2},end:{line:117,column:43}},"38":{start:{line:119,column:1},end:{line:119,column:25}},"39":{start:{line:122,column:1},end:{line:122,column:148}},"40":{start:{line:123,column:1},end:{line:123,column:16}},"41":{start:{line:135,column:23},end:{line:135,column:68}},"42":{start:{line:137,column:15},end:{line:137,column:20}},"43":{start:{line:138,column:20},end:{line:138,column:24}},"44":{start:{line:139,column:16},end:{line:139,column:21}},"45":{start:{line:140,column:20},end:{line:140,column:25}},"46":{start:{line:141,column:20},end:{line:141,column:151}},"47":{start:{line:142,column:23},end:{line:142,column:87}},"48":{start:{line:143,column:21},end:{line:143,column:23}},"49":{start:{line:146,column:1},end:{line:157,column:2}},"50":{start:{line:147,column:2},end:{line:147,column:47}},"51":{start:{line:148,column:2},end:{line:148,column:113}},"52":{start:{line:149,column:2},end:{line:149,column:143}},"53":{start:{line:151,column:2},end:{line:156,column:3}},"54":{start:{line:152,column:3},end:{line:152,column:19}},"55":{start:{line:154,column:3},end:{line:154,column:20}},"56":{start:{line:155,column:3},end:{line:155,column:197}},"57":{start:{line:159,column:1},end:{line:170,column:2}},"58":{start:{line:160,column:2},end:{line:160,column:73}},"59":{start:{line:161,column:2},end:{line:166,column:3}},"60":{start:{line:162,column:3},end:{line:162,column:23}},"61":{start:{line:164,column:3},end:{line:164,column:136}},"62":{start:{line:165,column:3},end:{line:165,column:148}},"63":{start:{line:168,column:2},end:{line:168,column:23}},"64":{start:{line:169,column:2},end:{line:169,column:189}},"65":{start:{line:171,column:1},end:{line:177,column:2}},"66":{start:{line:172,column:2},end:{line:172,column:17}},"67":{start:{line:174,column:2},end:{line:174,column:18}},"68":{start:{line:175,column:2},end:{line:175,column:109}},"69":{start:{line:176,column:2},end:{line:176,column:21}},"70":{start:{line:179,column:1},end:{line:179,column:16}},"71":{start:{line:194,column:15},end:{line:194,column:17}},"72":{start:{line:196,column:21},end:{line:196,column:23}},"73":{start:{line:197,column:23},end:{line:197,column:63}},"74":{start:{line:198,column:1},end:{line:198,column:150}},"75":{start:{line:201,column:1},end:{line:206,column:2}},"76":{start:{line:202,column:2},end:{line:202,column:71}},"77":{start:{line:203,column:2},end:{line:203,column:45}},"78":{start:{line:204,column:2},end:{line:204,column:160}},"79":{start:{line:205,column:2},end:{line:205,column:21}},"80":{start:{line:208,column:1},end:{line:208,column:50}},"81":{start:{line:209,column:1},end:{line:221,column:2}},"82":{start:{line:210,column:2},end:{line:215,column:3}},"83":{start:{line:211,column:3},end:{line:211,column:78}},"84":{start:{line:213,column:3},end:{line:213,column:167}},"85":{start:{line:214,column:3},end:{line:214,column:15}},"86":{start:{line:217,column:2},end:{line:217,column:116}},"87":{start:{line:218,column:2},end:{line:218,column:49}},"88":{start:{line:219,column:2},end:{line:219,column:160}},"89":{start:{line:220,column:2},end:{line:220,column:21}},"90":{start:{line:225,column:1},end:{line:225,column:148}},"91":{start:{line:226,column:1},end:{line:226,column:16}},"92":{start:{line:238,column:23},end:{line:238,column:68}},"93":{start:{line:240,column:15},end:{line:240,column:20}},"94":{start:{line:241,column:20},end:{line:241,column:24}},"95":{start:{line:242,column:17},end:{line:242,column:19}},"96":{start:{line:243,column:16},end:{line:243,column:21}},"97":{start:{line:244,column:24},end:{line:244,column:29}},"98":{start:{line:245,column:20},end:{line:245,column:25}},"99":{start:{line:246,column:13},end:{line:246,column:17}},"100":{start:{line:247,column:23},end:{line:247,column:87}},"101":{start:{line:248,column:21},end:{line:248,column:23}},"102":{start:{line:250,column:1},end:{line:250,column:32}},"103":{start:{line:251,column:1},end:{line:262,column:2}},"104":{start:{line:252,column:2},end:{line:252,column:56}},"105":{start:{line:253,column:2},end:{line:253,column:109}},"106":{start:{line:254,column:2},end:{line:254,column:143}},"107":{start:{line:256,column:2},end:{line:261,column:3}},"108":{start:{line:257,column:3},end:{line:257,column:19}},"109":{start:{line:259,column:3},end:{line:259,column:91}},"110":{start:{line:260,column:3},end:{line:260,column:144}},"111":{start:{line:263,column:1},end:{line:263,column:32}},"112":{start:{line:264,column:1},end:{line:276,column:2}},"113":{start:{line:265,column:2},end:{line:265,column:34}},"114":{start:{line:266,column:2},end:{line:266,column:50}},"115":{start:{line:267,column:2},end:{line:267,column:110}},"116":{start:{line:268,column:2},end:{line:268,column:151}},"117":{start:{line:270,column:2},end:{line:275,column:3}},"118":{start:{line:271,column:3},end:{line:271,column:27}},"119":{start:{line:273,column:3},end:{line:273,column:97}},"120":{start:{line:274,column:3},end:{line:274,column:152}},"121":{start:{line:277,column:1},end:{line:277,column:28}},"122":{start:{line:278,column:1},end:{line:290,column:2}},"123":{start:{line:279,column:2},end:{line:279,column:163}},"124":{start:{line:280,column:2},end:{line:280,column:66}},"125":{start:{line:281,column:2},end:{line:286,column:3}},"126":{start:{line:282,column:3},end:{line:282,column:23}},"127":{start:{line:284,column:3},end:{line:284,column:137}},"128":{start:{line:285,column:3},end:{line:285,column:148}},"129":{start:{line:288,column:2},end:{line:288,column:91}},"130":{start:{line:289,column:2},end:{line:289,column:147}},"131":{start:{line:292,column:1},end:{line:298,column:2}},"132":{start:{line:293,column:2},end:{line:293,column:17}},"133":{start:{line:295,column:2},end:{line:295,column:147}},"134":{start:{line:296,column:2},end:{line:296,column:147}},"135":{start:{line:297,column:2},end:{line:297,column:21}},"136":{start:{line:299,column:1},end:{line:299,column:16}},"137":{start:{line:311,column:23},end:{line:311,column:44}},"138":{start:{line:312,column:20},end:{line:312,column:24}},"139":{start:{line:313,column:23},end:{line:313,column:35}},"140":{start:{line:314,column:1},end:{line:314,column:156}},"141":{start:{line:316,column:20},end:{line:316,column:22}},"142":{start:{line:317,column:21},end:{line:317,column:23}},"143":{start:{line:321,column:1},end:{line:346,column:2}},"144":{start:{line:322,column:2},end:{line:322,column:153}},"145":{start:{line:323,column:2},end:{line:328,column:3}},"146":{start:{line:324,column:3},end:{line:324,column:59}},"147":{start:{line:326,column:3},end:{line:326,column:66}},"148":{start:{line:327,column:3},end:{line:327,column:148}},"149":{start:{line:329,column:8},end:{line:346,column:2}},"150":{start:{line:330,column:2},end:{line:330,column:154}},"151":{start:{line:331,column:2},end:{line:342,column:3}},"152":{start:{line:332,column:3},end:{line:332,column:163}},"153":{start:{line:333,column:3},end:{line:338,column:4}},"154":{start:{line:334,column:4},end:{line:334,column:68}},"155":{start:{line:336,column:4},end:{line:336,column:81}},"156":{start:{line:337,column:4},end:{line:337,column:149}},"157":{start:{line:340,column:3},end:{line:340,column:64}},"158":{start:{line:341,column:3},end:{line:341,column:148}},"159":{start:{line:344,column:2},end:{line:344,column:58}},"160":{start:{line:345,column:2},end:{line:345,column:147}},"161":{start:{line:348,column:1},end:{line:360,column:2}},"162":{start:{line:349,column:2},end:{line:359,column:3}},"163":{start:{line:350,column:3},end:{line:355,column:4}},"164":{start:{line:351,column:4},end:{line:351,column:84}},"165":{start:{line:353,column:4},end:{line:353,column:96}},"166":{start:{line:354,column:4},end:{line:354,column:149}},"167":{start:{line:357,column:3},end:{line:357,column:76}},"168":{start:{line:358,column:3},end:{line:358,column:148}},"169":{start:{line:362,column:1},end:{line:381,column:2}},"170":{start:{line:363,column:2},end:{line:380,column:3}},"171":{start:{line:364,column:3},end:{line:376,column:4}},"172":{start:{line:365,column:4},end:{line:370,column:5}},"173":{start:{line:366,column:5},end:{line:366,column:71}},"174":{start:{line:368,column:5},end:{line:368,column:83}},"175":{start:{line:369,column:5},end:{line:369,column:150}},"176":{start:{line:372,column:4},end:{line:374,column:5}},"177":{start:{line:373,column:5},end:{line:373,column:181}},"178":{start:{line:375,column:4},end:{line:375,column:31}},"179":{start:{line:378,column:3},end:{line:378,column:79}},"180":{start:{line:379,column:3},end:{line:379,column:148}},"181":{start:{line:384,column:1},end:{line:387,column:2}},"182":{start:{line:385,column:2},end:{line:385,column:23}},"183":{start:{line:386,column:2},end:{line:386,column:146}},"184":{start:{line:400,column:23},end:{line:400,column:40}},"185":{start:{line:402,column:15},end:{line:402,column:20}},"186":{start:{line:403,column:20},end:{line:403,column:24}},"187":{start:{line:405,column:1},end:{line:411,column:2}},"188":{start:{line:406,column:2},end:{line:406,column:48}},"189":{start:{line:407,column:2},end:{line:407,column:48}},"190":{start:{line:409,column:2},end:{line:409,column:162}},"191":{start:{line:410,column:2},end:{line:410,column:23}},"192":{start:{line:413,column:1},end:{line:413,column:16}},"193":{start:{line:417,column:0},end:{line:525,column:1}},"194":{start:{line:418,column:15},end:{line:418,column:23}},"195":{start:{line:419,column:23},end:{line:419,column:46}},"196":{start:{line:423,column:15},end:{line:423,column:30}},"197":{start:{line:425,column:18},end:{line:425,column:37}},"198":{start:{line:426,column:41},end:{line:426,column:85}},"199":{start:{line:427,column:19},end:{line:427,column:39}},"200":{start:{line:428,column:26},end:{line:428,column:54}},"201":{start:{line:429,column:27},end:{line:429,column:56}},"202":{start:{line:431,column:26},end:{line:431,column:50}},"203":{start:{line:432,column:27},end:{line:450,column:2}},"204":{start:{line:452,column:23},end:{line:452,column:31}},"205":{start:{line:453,column:18},end:{line:453,column:23}},"206":{start:{line:454,column:22},end:{line:454,column:24}},"207":{start:{line:455,column:22},end:{line:455,column:24}},"208":{start:{line:456,column:20},end:{line:456,column:22}},"209":{start:{line:458,column:1},end:{line:462,column:2}},"210":{start:{line:459,column:2},end:{line:459,column:39}},"211":{start:{line:461,column:2},end:{line:461,column:49}},"212":{start:{line:463,column:1},end:{line:463,column:96}},"213":{start:{line:464,column:1},end:{line:466,column:2}},"214":{start:{line:465,column:2},end:{line:465,column:34}},"215":{start:{line:467,column:1},end:{line:467,column:153}},"216":{start:{line:469,column:15},end:{line:469,column:51}},"217":{start:{line:471,column:1},end:{line:474,column:2}},"218":{start:{line:472,column:2},end:{line:472,column:56}},"219":{start:{line:473,column:2},end:{line:473,column:225}},"220":{start:{line:476,column:1},end:{line:489,column:2}},"221":{start:{line:477,column:2},end:{line:477,column:51}},"222":{start:{line:478,column:2},end:{line:478,column:61}},"223":{start:{line:479,column:2},end:{line:479,column:39}},"224":{start:{line:481,column:2},end:{line:481,column:149}},"225":{start:{line:482,column:2},end:{line:488,column:3}},"226":{start:{line:483,column:3},end:{line:483,column:51}},"227":{start:{line:484,column:3},end:{line:484,column:62}},"228":{start:{line:485,column:3},end:{line:485,column:40}},"229":{start:{line:487,column:3},end:{line:487,column:150}},"230":{start:{line:491,column:1},end:{line:494,column:2}},"231":{start:{line:492,column:2},end:{line:492,column:36}},"232":{start:{line:493,column:2},end:{line:493,column:20}},"233":{start:{line:495,column:1},end:{line:509,column:2}},"234":{start:{line:496,column:30},end:{line:505,column:3}},"235":{start:{line:506,column:23},end:{line:506,column:60}},"236":{start:{line:507,column:2},end:{line:507,column:28}},"237":{start:{line:508,column:2},end:{line:508,column:20}},"238":{start:{line:510,column:1},end:{line:512,column:2}},"239":{start:{line:511,column:2},end:{line:511,column:20}},"240":{start:{line:513,column:1},end:{line:519,column:2}},"241":{start:{line:514,column:2},end:{line:518,column:3}},"242":{start:{line:515,column:3},end:{line:515,column:21}},"243":{start:{line:517,column:3},end:{line:517,column:25}},"244":{start:{line:520,column:1},end:{line:520,column:151}},"245":{start:{line:522,column:1},end:{line:522,column:31}},"246":{start:{line:523,column:1},end:{line:523,column:77}},"247":{start:{line:524,column:1},end:{line:524,column:77}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:47,column:6},end:{line:47,column:7}},loc:{start:{line:47,column:12},end:{line:49,column:2}},line:47},"1":{name:"setLogger",decl:{start:{line:60,column:9},end:{line:60,column:18}},loc:{start:{line:60,column:28},end:{line:82,column:1}},line:60},"2":{name:"(anonymous_2)",decl:{start:{line:68,column:9},end:{line:68,column:10}},loc:{start:{line:68,column:15},end:{line:70,column:5}},line:68},"3":{name:"getDocumentationStringFromSourceString",decl:{start:{line:94,column:9},end:{line:94,column:47}},loc:{start:{line:94,column:78},end:{line:124,column:1}},line:94},"4":{name:"getDocumentationStringFromSourceString_Test",decl:{start:{line:134,column:9},end:{line:134,column:52}},loc:{start:{line:134,column:54},end:{line:180,column:1}},line:134},"5":{name:"getDocumentationStringFromSourceBuffer",decl:{start:{line:193,column:9},end:{line:193,column:47}},loc:{start:{line:193,column:79},end:{line:227,column:1}},line:193},"6":{name:"getDocumentationStringFromSourceBuffer_Test",decl:{start:{line:237,column:9},end:{line:237,column:52}},loc:{start:{line:237,column:54},end:{line:300,column:1}},line:237},"7":{name:"main_Async",decl:{start:{line:310,column:15},end:{line:310,column:25}},loc:{start:{line:310,column:41},end:{line:388,column:1}},line:310},"8":{name:"main_Async_Test",decl:{start:{line:399,column:15},end:{line:399,column:30}},loc:{start:{line:399,column:32},end:{line:414,column:1}},line:399}},branchMap:{"0":{loc:{start:{line:38,column:0},end:{line:42,column:1}},type:"if",locations:[{start:{line:38,column:0},end:{line:42,column:1}},{start:{line:38,column:0},end:{line:42,column:1}}],line:38},"1":{loc:{start:{line:65,column:1},end:{line:77,column:2}},type:"if",locations:[{start:{line:65,column:1},end:{line:77,column:2}},{start:{line:65,column:1},end:{line:77,column:2}}],line:65},"2":{loc:{start:{line:66,column:2},end:{line:72,column:3}},type:"if",locations:[{start:{line:66,column:2},end:{line:72,column:3}},{start:{line:66,column:2},end:{line:72,column:3}}],line:66},"3":{loc:{start:{line:94,column:64},end:{line:94,column:76}},type:"default-arg",locations:[{start:{line:94,column:74},end:{line:94,column:76}}],line:94},"4":{loc:{start:{line:106,column:1},end:{line:110,column:2}},type:"if",locations:[{start:{line:106,column:1},end:{line:110,column:2}},{start:{line:106,column:1},end:{line:110,column:2}}],line:106},"5":{loc:{start:{line:151,column:2},end:{line:156,column:3}},type:"if",locations:[{start:{line:151,column:2},end:{line:156,column:3}},{start:{line:151,column:2},end:{line:156,column:3}}],line:151},"6":{loc:{start:{line:161,column:2},end:{line:166,column:3}},type:"if",locations:[{start:{line:161,column:2},end:{line:166,column:3}},{start:{line:161,column:2},end:{line:166,column:3}}],line:161},"7":{loc:{start:{line:171,column:1},end:{line:177,column:2}},type:"if",locations:[{start:{line:171,column:1},end:{line:177,column:2}},{start:{line:171,column:1},end:{line:177,column:2}}],line:171},"8":{loc:{start:{line:171,column:5},end:{line:171,column:51}},type:"binary-expr",locations:[{start:{line:171,column:6},end:{line:171,column:23}},{start:{line:171,column:29},end:{line:171,column:50}}],line:171},"9":{loc:{start:{line:193,column:65},end:{line:193,column:77}},type:"default-arg",locations:[{start:{line:193,column:75},end:{line:193,column:77}}],line:193},"10":{loc:{start:{line:201,column:1},end:{line:206,column:2}},type:"if",locations:[{start:{line:201,column:1},end:{line:206,column:2}},{start:{line:201,column:1},end:{line:206,column:2}}],line:201},"11":{loc:{start:{line:209,column:1},end:{line:221,column:2}},type:"if",locations:[{start:{line:209,column:1},end:{line:221,column:2}},{start:{line:209,column:1},end:{line:221,column:2}}],line:209},"12":{loc:{start:{line:256,column:2},end:{line:261,column:3}},type:"if",locations:[{start:{line:256,column:2},end:{line:261,column:3}},{start:{line:256,column:2},end:{line:261,column:3}}],line:256},"13":{loc:{start:{line:270,column:2},end:{line:275,column:3}},type:"if",locations:[{start:{line:270,column:2},end:{line:275,column:3}},{start:{line:270,column:2},end:{line:275,column:3}}],line:270},"14":{loc:{start:{line:281,column:2},end:{line:286,column:3}},type:"if",locations:[{start:{line:281,column:2},end:{line:286,column:3}},{start:{line:281,column:2},end:{line:286,column:3}}],line:281},"15":{loc:{start:{line:292,column:1},end:{line:298,column:2}},type:"if",locations:[{start:{line:292,column:1},end:{line:298,column:2}},{start:{line:292,column:1},end:{line:298,column:2}}],line:292},"16":{loc:{start:{line:292,column:5},end:{line:292,column:82}},type:"binary-expr",locations:[{start:{line:292,column:6},end:{line:292,column:23}},{start:{line:292,column:29},end:{line:292,column:54}},{start:{line:292,column:60},end:{line:292,column:81}}],line:292},"17":{loc:{start:{line:310,column:27},end:{line:310,column:39}},type:"default-arg",locations:[{start:{line:310,column:37},end:{line:310,column:39}}],line:310},"18":{loc:{start:{line:321,column:1},end:{line:346,column:2}},type:"if",locations:[{start:{line:321,column:1},end:{line:346,column:2}},{start:{line:321,column:1},end:{line:346,column:2}}],line:321},"19":{loc:{start:{line:329,column:8},end:{line:346,column:2}},type:"if",locations:[{start:{line:329,column:8},end:{line:346,column:2}},{start:{line:329,column:8},end:{line:346,column:2}}],line:329},"20":{loc:{start:{line:331,column:2},end:{line:342,column:3}},type:"if",locations:[{start:{line:331,column:2},end:{line:342,column:3}},{start:{line:331,column:2},end:{line:342,column:3}}],line:331},"21":{loc:{start:{line:348,column:1},end:{line:360,column:2}},type:"if",locations:[{start:{line:348,column:1},end:{line:360,column:2}},{start:{line:348,column:1},end:{line:360,column:2}}],line:348},"22":{loc:{start:{line:349,column:2},end:{line:359,column:3}},type:"if",locations:[{start:{line:349,column:2},end:{line:359,column:3}},{start:{line:349,column:2},end:{line:359,column:3}}],line:349},"23":{loc:{start:{line:349,column:6},end:{line:349,column:62}},type:"binary-expr",locations:[{start:{line:349,column:6},end:{line:349,column:25}},{start:{line:349,column:29},end:{line:349,column:62}}],line:349},"24":{loc:{start:{line:362,column:1},end:{line:381,column:2}},type:"if",locations:[{start:{line:362,column:1},end:{line:381,column:2}},{start:{line:362,column:1},end:{line:381,column:2}}],line:362},"25":{loc:{start:{line:363,column:2},end:{line:380,column:3}},type:"if",locations:[{start:{line:363,column:2},end:{line:380,column:3}},{start:{line:363,column:2},end:{line:380,column:3}}],line:363},"26":{loc:{start:{line:363,column:6},end:{line:363,column:64}},type:"binary-expr",locations:[{start:{line:363,column:6},end:{line:363,column:26}},{start:{line:363,column:30},end:{line:363,column:64}}],line:363},"27":{loc:{start:{line:364,column:3},end:{line:376,column:4}},type:"if",locations:[{start:{line:364,column:3},end:{line:376,column:4}},{start:{line:364,column:3},end:{line:376,column:4}}],line:364},"28":{loc:{start:{line:364,column:7},end:{line:364,column:67}},type:"binary-expr",locations:[{start:{line:364,column:7},end:{line:364,column:29}},{start:{line:364,column:33},end:{line:364,column:67}}],line:364},"29":{loc:{start:{line:372,column:4},end:{line:374,column:5}},type:"if",locations:[{start:{line:372,column:4},end:{line:374,column:5}},{start:{line:372,column:4},end:{line:374,column:5}}],line:372},"30":{loc:{start:{line:384,column:1},end:{line:387,column:2}},type:"if",locations:[{start:{line:384,column:1},end:{line:387,column:2}},{start:{line:384,column:1},end:{line:387,column:2}}],line:384},"31":{loc:{start:{line:417,column:0},end:{line:525,column:1}},type:"if",locations:[{start:{line:417,column:0},end:{line:525,column:1}},{start:{line:417,column:0},end:{line:525,column:1}}],line:417},"32":{loc:{start:{line:464,column:1},end:{line:466,column:2}},type:"if",locations:[{start:{line:464,column:1},end:{line:466,column:2}},{start:{line:464,column:1},end:{line:466,column:2}}],line:464},"33":{loc:{start:{line:471,column:1},end:{line:474,column:2}},type:"if",locations:[{start:{line:471,column:1},end:{line:474,column:2}},{start:{line:471,column:1},end:{line:474,column:2}}],line:471},"34":{loc:{start:{line:491,column:1},end:{line:494,column:2}},type:"if",locations:[{start:{line:491,column:1},end:{line:494,column:2}},{start:{line:491,column:1},end:{line:494,column:2}}],line:491},"35":{loc:{start:{line:495,column:1},end:{line:509,column:2}},type:"if",locations:[{start:{line:495,column:1},end:{line:509,column:2}},{start:{line:495,column:1},end:{line:509,column:2}}],line:495},"36":{loc:{start:{line:510,column:1},end:{line:512,column:2}},type:"if",locations:[{start:{line:510,column:1},end:{line:512,column:2}},{start:{line:510,column:1},end:{line:512,column:2}}],line:510},"37":{loc:{start:{line:513,column:1},end:{line:519,column:2}},type:"if",locations:[{start:{line:513,column:1},end:{line:519,column:2}},{start:{line:513,column:1},end:{line:519,column:2}}],line:513},"38":{loc:{start:{line:513,column:5},end:{line:513,column:62}},type:"binary-expr",locations:[{start:{line:513,column:5},end:{line:513,column:25}},{start:{line:513,column:29},end:{line:513,column:62}}],line:513},"39":{loc:{start:{line:514,column:2},end:{line:518,column:3}},type:"if",locations:[{start:{line:514,column:2},end:{line:518,column:3}},{start:{line:514,column:2},end:{line:518,column:3}}],line:514}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"36e14fabce23aba4e62650d9aa4b14cbc83e1bb0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];cov_dszvcpt6v=function(){return actualCoverage;};return actualCoverage;}cov_dszvcpt6v();const FileSystem=(cov_dszvcpt6v().s[0]++,require('fs'));//##External
const GetStream=(cov_dszvcpt6v().s[1]++,require('get-stream'));//#Constants
const FILENAME=(cov_dszvcpt6v().s[2]++,'extract-documentation-comments.js');const MODULE_NAME=(cov_dszvcpt6v().s[3]++,'ExtractDocumentationComments');var PACKAGE_JSON=(cov_dszvcpt6v().s[4]++,{});var PROCESS_NAME=(cov_dszvcpt6v().s[5]++,'');cov_dszvcpt6v().s[6]++;if(require.main===module){cov_dszvcpt6v().b[0][0]++;cov_dszvcpt6v().s[7]++;PROCESS_NAME='extract-documentation-comments';}else{cov_dszvcpt6v().b[0][1]++;cov_dszvcpt6v().s[8]++;PROCESS_NAME=process.argv0;}//##Errors
//#Global Variables
var Logger=(cov_dszvcpt6v().s[9]++,{log:()=>{cov_dszvcpt6v().f[0]++;cov_dszvcpt6v().s[10]++;return null;}});//#Functions
/**
* @function setLogger
* @access public
* @description Allows this module's functions to log the given logger object.
* @param {?object} logger - The logger to be used for logging or `null` to disable logging.
* @throws {TypeError} `ERR_INVALID_ARG_TYPE` if logger is not an object or `null`. 
* @since v0.0.0
*/function setLogger(logger){cov_dszvcpt6v().f[1]++;var return_error=(cov_dszvcpt6v().s[11]++,null);//const FUNCTION_NAME = 'setLogger';
//Variables
//Parametre checks
cov_dszvcpt6v().s[12]++;if(typeof logger==='object'){cov_dszvcpt6v().b[1][0]++;cov_dszvcpt6v().s[13]++;if(logger===null){cov_dszvcpt6v().b[2][0]++;cov_dszvcpt6v().s[14]++;logger={log:()=>{cov_dszvcpt6v().f[2]++;cov_dszvcpt6v().s[15]++;return null;}};}else{cov_dszvcpt6v().b[2][1]++;}}else{cov_dszvcpt6v().b[1][1]++;cov_dszvcpt6v().s[16]++;return_error=new TypeError('Param "logger" is not an object.');cov_dszvcpt6v().s[17]++;return_error.code='ERR_INVALID_ARG_TYPE';cov_dszvcpt6v().s[18]++;throw return_error;}//Function
cov_dszvcpt6v().s[19]++;Logger=logger;//Return
}/**
* @function getDocumentationStringFromSourceString
* @access public
* @description Returns a string containing only the contents of `\/** ... *\/` style documentation strings from the given source-file string.
* @param {string} source_string - The source file, as a string, to parse for `\/** ... *\/` style documentation strings. 
* @param {?Object} options - Additional run-time options. [default: {}]
* @returns {string} A string containing all of the documentation style comments, with the comment markers themselves remove, concatenated together.
* @throws {TypeError} `ERR_INVALID_ARG_TYPE` Thrown if `source_string` isn't a string.
* @since v0.0.1
*/function getDocumentationStringFromSourceString(source_string,options=(cov_dszvcpt6v().b[3][0]++,{})){cov_dszvcpt6v().f[3]++;var arguments_array=(cov_dszvcpt6v().s[20]++,Array.from(arguments));var _return;var return_error;var regex=(cov_dszvcpt6v().s[21]++,null);var matches_iterator=(cov_dszvcpt6v().s[22]++,null);var matches_array=(cov_dszvcpt6v().s[23]++,[]);var documentation=(cov_dszvcpt6v().s[24]++,'');const FUNCTION_NAME=(cov_dszvcpt6v().s[25]++,'getDocumentationStringFromSourceString');cov_dszvcpt6v().s[26]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'debug',message:`received: ${arguments_array}`});//Variables
//Parametre checks
cov_dszvcpt6v().s[27]++;if(typeof source_string!=='string'){cov_dszvcpt6v().b[4][0]++;cov_dszvcpt6v().s[28]++;return_error=new TypeError('Param "source_string" is not string.');cov_dszvcpt6v().s[29]++;return_error.code='ERR_INVALID_ARG_TYPE';cov_dszvcpt6v().s[30]++;throw return_error;}else{cov_dszvcpt6v().b[4][1]++;}//Function
cov_dszvcpt6v().s[31]++;regex=new RegExp('/\\*\\*\\n([\\t\\n\\r -~]*?)\\*/','gs');cov_dszvcpt6v().s[32]++;matches_iterator=source_string.matchAll(regex);cov_dszvcpt6v().s[33]++;matches_array=Array.from(matches_iterator);cov_dszvcpt6v().s[34]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'debug',message:`matches: ${matches_array}`});cov_dszvcpt6v().s[35]++;for(var index=(cov_dszvcpt6v().s[36]++,0);index<matches_array.length;index++){cov_dszvcpt6v().s[37]++;documentation+=matches_array[index][1];}cov_dszvcpt6v().s[38]++;_return=documentation;//Return
cov_dszvcpt6v().s[39]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'debug',message:`returned: ${_return}`});cov_dszvcpt6v().s[40]++;return _return;}/**
* @function getDocumentationStringFromSourceString_Test
* @access private
* @description Tests getDocumentationStringFromSourceString
* @returns {boolean} `true` if all test pass successfully.
* @throws {Error} If a test fails.
* @since v0.0.1
*/function getDocumentationStringFromSourceString_Test(){cov_dszvcpt6v().f[4]++;const FUNCTION_NAME=(cov_dszvcpt6v().s[41]++,'getDocumentationStringFromSourceString_Test');//Variables
var _return=(cov_dszvcpt6v().s[42]++,false);var return_error=(cov_dszvcpt6v().s[43]++,null);var arg_test=(cov_dszvcpt6v().s[44]++,false);var success_test=(cov_dszvcpt6v().s[45]++,false);var sample_input=(cov_dszvcpt6v().s[46]++,'something\n/**\n* should appear\nalso should appear\n*/\nshould not appear\n/**\nshould appear round two\n*/\nshould not appear\n');var expected_output=(cov_dszvcpt6v().s[47]++,'* should appear\nalso should appear\nshould appear round two\n');var actual_output=(cov_dszvcpt6v().s[48]++,'');//Tests
///Invalid arg test
cov_dszvcpt6v().s[49]++;try{cov_dszvcpt6v().s[50]++;getDocumentationStringFromSourceString({});cov_dszvcpt6v().s[51]++;arg_test=new Error(`Failure: invalid arg test: didn't throw an error when it received an invalid argument.`);cov_dszvcpt6v().s[52]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:arg_test.message});}catch(error){cov_dszvcpt6v().s[53]++;if(error.code==='ERR_INVALID_ARG_TYPE'){cov_dszvcpt6v().b[5][0]++;cov_dszvcpt6v().s[54]++;arg_test=true;}else{cov_dszvcpt6v().b[5][1]++;cov_dszvcpt6v().s[55]++;arg_test=error;cov_dszvcpt6v().s[56]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:`Failure: invalid arg test: received an unexpected error: ${error}\n`});}}///success test
cov_dszvcpt6v().s[57]++;try{cov_dszvcpt6v().s[58]++;actual_output=getDocumentationStringFromSourceString(sample_input);cov_dszvcpt6v().s[59]++;if(actual_output===expected_output){cov_dszvcpt6v().b[6][0]++;cov_dszvcpt6v().s[60]++;success_test=true;}else{cov_dszvcpt6v().b[6][1]++;cov_dszvcpt6v().s[61]++;success_test=new Error(`success test failed: actual output: '${actual_output}' didn't match expected output '${expected_output}'`);cov_dszvcpt6v().s[62]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:success_test.message});}}catch(error){cov_dszvcpt6v().s[63]++;success_test=error;cov_dszvcpt6v().s[64]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:`Failure: success test caught an unexpected error: ${error}\n`});}cov_dszvcpt6v().s[65]++;if((cov_dszvcpt6v().b[8][0]++,arg_test===true)&&(cov_dszvcpt6v().b[8][1]++,success_test===true)){cov_dszvcpt6v().b[7][0]++;cov_dszvcpt6v().s[66]++;_return=true;}else{cov_dszvcpt6v().b[7][1]++;cov_dszvcpt6v().s[67]++;_return=false;cov_dszvcpt6v().s[68]++;return_error=new Error(`Test failed: invalid arg test: '${arg_test}' success test: '${success_test}'\n`);cov_dszvcpt6v().s[69]++;throw return_error;}//Return
cov_dszvcpt6v().s[70]++;return _return;}/**
* @function getDocumentationStringFromSourceBuffer
* @access public
* @description Returns a string containing only the contents of `\/** ... *\/` style documentation strings from the given source-file buffer.
* @param {Buffer} source_buffer - The source file, as a Node Buffer, to parse for `\/** ... *\/` style documentation strings. 
* @param {?Object} options - Additional run-time options. [default: {}]
* @returns {string} A string containing all of the documentation style comments, with the comment markers themselves remove, concatenated together.
* @throws {TypeError} `ERR_INVALID_ARG_TYPE` Thrown if `source_buffer` isn't a Buffer.
* @throws {Error} `ERR_INVALID_RETURN_VALUE` Thrown if `source_buffer.toString()` returns an empty string or a non-string.
* @since v0.0.1
*/function getDocumentationStringFromSourceBuffer(source_buffer,options=(cov_dszvcpt6v().b[9][0]++,{})){cov_dszvcpt6v().f[5]++;var _return=(cov_dszvcpt6v().s[71]++,'');var return_error;var buffer_string=(cov_dszvcpt6v().s[72]++,'');const FUNCTION_NAME=(cov_dszvcpt6v().s[73]++,'getDocumentationStringFromSourceBuffer');cov_dszvcpt6v().s[74]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'debug',message:`received: ${arguments}`});//Variables
//Parametre checks
cov_dszvcpt6v().s[75]++;if(Buffer.isBuffer(source_buffer)===false){cov_dszvcpt6v().b[10][0]++;cov_dszvcpt6v().s[76]++;return_error=new TypeError('Param "source_buffer" is not Buffer.');cov_dszvcpt6v().s[77]++;return_error.code='ERR_INVALID_ARG_TYPE';cov_dszvcpt6v().s[78]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:`Throwing error: ${return_error}`});cov_dszvcpt6v().s[79]++;throw return_error;}else{cov_dszvcpt6v().b[10][1]++;}//Function
cov_dszvcpt6v().s[80]++;buffer_string=source_buffer.toString('utf8');cov_dszvcpt6v().s[81]++;if(buffer_string!==''){cov_dszvcpt6v().b[11][0]++;cov_dszvcpt6v().s[82]++;try{cov_dszvcpt6v().s[83]++;_return=getDocumentationStringFromSourceString(buffer_string,options);}catch(error){cov_dszvcpt6v().s[84]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:`Received and throwing error: ${error}`});cov_dszvcpt6v().s[85]++;throw error;}}else{cov_dszvcpt6v().b[11][1]++;cov_dszvcpt6v().s[86]++;return_error=new Error(`'source_buffer.toString()' returned an empty string or a non-string: ${buffer_string}`);cov_dszvcpt6v().s[87]++;return_error.code='ERR_INVALID_RETURN_VALUE';cov_dszvcpt6v().s[88]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:`Throwing error: ${return_error}`});cov_dszvcpt6v().s[89]++;throw return_error;}//Return
cov_dszvcpt6v().s[90]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'debug',message:`returned: ${_return}`});cov_dszvcpt6v().s[91]++;return _return;}/**
* @function getDocumentationStringFromSourceBuffer_Test
* @access private
* @description Tests getDocumentationStringFromSourceBuffer
* @returns {boolean} `true` if all test pass successfully.
* @throws {Error} If a test fails.
* @since v0.0.1
*/function getDocumentationStringFromSourceBuffer_Test(){cov_dszvcpt6v().f[6]++;const FUNCTION_NAME=(cov_dszvcpt6v().s[92]++,'getDocumentationStringFromSourceBuffer_Test');//Variables
var _return=(cov_dszvcpt6v().s[93]++,false);var return_error=(cov_dszvcpt6v().s[94]++,null);var test_name=(cov_dszvcpt6v().s[95]++,'');var arg_test=(cov_dszvcpt6v().s[96]++,false);var null_buffer_test=(cov_dszvcpt6v().s[97]++,false);var success_test=(cov_dszvcpt6v().s[98]++,false);var input=(cov_dszvcpt6v().s[99]++,null);var expected_output=(cov_dszvcpt6v().s[100]++,'* should appear\nalso should appear\nshould appear round two\n');var actual_output=(cov_dszvcpt6v().s[101]++,'');//Tests
cov_dszvcpt6v().s[102]++;test_name='invalid arg test';cov_dszvcpt6v().s[103]++;try{cov_dszvcpt6v().s[104]++;getDocumentationStringFromSourceBuffer('something');cov_dszvcpt6v().s[105]++;arg_test=new Error(`Failure: ${test_name}: failed to return an error even when arguments were invalid.`);cov_dszvcpt6v().s[106]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:arg_test.message});}catch(error){cov_dszvcpt6v().s[107]++;if(error.code==='ERR_INVALID_ARG_TYPE'){cov_dszvcpt6v().b[12][0]++;cov_dszvcpt6v().s[108]++;arg_test=true;}else{cov_dszvcpt6v().b[12][1]++;cov_dszvcpt6v().s[109]++;arg_test=new Error(`Failure: ${test_name}: received an unexpected error: '${error}'`);cov_dszvcpt6v().s[110]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:arg_test.message});}}cov_dszvcpt6v().s[111]++;test_name='null buffer test';cov_dszvcpt6v().s[112]++;try{cov_dszvcpt6v().s[113]++;input=Buffer.from('','utf8');cov_dszvcpt6v().s[114]++;getDocumentationStringFromSourceBuffer(input);cov_dszvcpt6v().s[115]++;null_buffer_test=new Error(`Failure: ${test_name}: failed to return an error when sent an empty buffer.`);cov_dszvcpt6v().s[116]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:null_buffer_test.message});}catch(error){cov_dszvcpt6v().s[117]++;if(error.code==='ERR_INVALID_RETURN_VALUE'){cov_dszvcpt6v().b[13][0]++;cov_dszvcpt6v().s[118]++;null_buffer_test=true;}else{cov_dszvcpt6v().b[13][1]++;cov_dszvcpt6v().s[119]++;null_buffer_test=new Error(`Failure: ${test_name}: received an unexpected error: ${error}`);cov_dszvcpt6v().s[120]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:null_buffer_test.message});}}cov_dszvcpt6v().s[121]++;test_name='success test';cov_dszvcpt6v().s[122]++;try{cov_dszvcpt6v().s[123]++;input=Buffer.from('something\n/**\n* should appear\nalso should appear\n*/\nshould not appear\n/**\nshould appear round two\n*/\nshould not appear\n','utf8');cov_dszvcpt6v().s[124]++;actual_output=getDocumentationStringFromSourceBuffer(input);cov_dszvcpt6v().s[125]++;if(actual_output===expected_output){cov_dszvcpt6v().b[14][0]++;cov_dszvcpt6v().s[126]++;success_test=true;}else{cov_dszvcpt6v().b[14][1]++;cov_dszvcpt6v().s[127]++;success_test=new Error(`Failure: ${test_name}: actual output '${actual_output}' didn't match expected output '${expected_output}'`);cov_dszvcpt6v().s[128]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:success_test.message});}}catch(error){cov_dszvcpt6v().s[129]++;success_test=new Error(`Failure: ${test_name}: caught unexpected exception: ${error}`);cov_dszvcpt6v().s[130]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:success_test.message});}//Return
cov_dszvcpt6v().s[131]++;if((cov_dszvcpt6v().b[16][0]++,arg_test===true)&&(cov_dszvcpt6v().b[16][1]++,null_buffer_test===true)&&(cov_dszvcpt6v().b[16][2]++,success_test===true)){cov_dszvcpt6v().b[15][0]++;cov_dszvcpt6v().s[132]++;_return=true;}else{cov_dszvcpt6v().b[15][1]++;cov_dszvcpt6v().s[133]++;return_error=new Error(`Test failed: invalid arg test: '${arg_test}' null buffer test: '${null_buffer_test}' success test: '${success_test}'`);cov_dszvcpt6v().s[134]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:return_error.message});cov_dszvcpt6v().s[135]++;throw return_error;}cov_dszvcpt6v().s[136]++;return _return;}/**
* @function main_Async
* @async
* @access private
* @description The main function.
* @param {?Object} options - Command-line options. [default: {}]
* @since v0.0.1
*/async function main_Async(options=(cov_dszvcpt6v().b[17][0]++,{})){cov_dszvcpt6v().f[7]++;var arguments_array=(cov_dszvcpt6v().s[137]++,Array.from(arguments));var return_error=(cov_dszvcpt6v().s[138]++,null);const FUNCTION_NAME=(cov_dszvcpt6v().s[139]++,'main_Async');cov_dszvcpt6v().s[140]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'debug',message:`received: ${arguments_array}`});//Variables
var input_string=(cov_dszvcpt6v().s[141]++,'');var output_string=(cov_dszvcpt6v().s[142]++,'');//Parametre checks
//Function
///Input
cov_dszvcpt6v().s[143]++;if(options.stdin===true){cov_dszvcpt6v().b[18][0]++;cov_dszvcpt6v().s[144]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'info',message:'Reading input from STDIN.'});cov_dszvcpt6v().s[145]++;try{cov_dszvcpt6v().s[146]++;input_string=await GetStream(process.stdin,'utf8');}catch(error){cov_dszvcpt6v().s[147]++;return_error=new Error(`GetStream threw an error: ${error}`);cov_dszvcpt6v().s[148]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:return_error.message});}}else{cov_dszvcpt6v().b[18][1]++;cov_dszvcpt6v().s[149]++;if(options.input!=null){cov_dszvcpt6v().b[19][0]++;cov_dszvcpt6v().s[150]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'info',message:'Reading input from a file.'});cov_dszvcpt6v().s[151]++;if(typeof options.input==='string'){cov_dszvcpt6v().b[20][0]++;cov_dszvcpt6v().s[152]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'debug',message:`options.input: '${options.input}'`});cov_dszvcpt6v().s[153]++;try{cov_dszvcpt6v().s[154]++;input_string=FileSystem.readFileSync(options.input,'utf8');}catch(error){cov_dszvcpt6v().s[155]++;return_error=new Error(`FileSystem.readFileSync threw an error: ${error}`);cov_dszvcpt6v().s[156]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:return_error.message});}}else{cov_dszvcpt6v().b[20][1]++;cov_dszvcpt6v().s[157]++;return_error=new Error('"options.input" is not a string.');cov_dszvcpt6v().s[158]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:return_error.message});}}else{cov_dszvcpt6v().b[19][1]++;cov_dszvcpt6v().s[159]++;return_error=new Error('No input options specified.');cov_dszvcpt6v().s[160]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:return_error.message});}}///Transform
cov_dszvcpt6v().s[161]++;if(return_error===null){cov_dszvcpt6v().b[21][0]++;cov_dszvcpt6v().s[162]++;if((cov_dszvcpt6v().b[23][0]++,input_string!=='')&&(cov_dszvcpt6v().b[23][1]++,typeof input_string==='string')){cov_dszvcpt6v().b[22][0]++;cov_dszvcpt6v().s[163]++;try{cov_dszvcpt6v().s[164]++;output_string=getDocumentationStringFromSourceString(input_string,options);}catch(error){cov_dszvcpt6v().s[165]++;return_error=new Error(`getDocumentationStringFromSourceString threw an error: ${error}`);cov_dszvcpt6v().s[166]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:return_error.message});}}else{cov_dszvcpt6v().b[22][1]++;cov_dszvcpt6v().s[167]++;return_error=new Error('input_string is either null or not a string.');cov_dszvcpt6v().s[168]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:return_error.message});}}else{cov_dszvcpt6v().b[21][1]++;}///Output
cov_dszvcpt6v().s[169]++;if(return_error===null){cov_dszvcpt6v().b[24][0]++;cov_dszvcpt6v().s[170]++;if((cov_dszvcpt6v().b[26][0]++,output_string!=='')&&(cov_dszvcpt6v().b[26][1]++,typeof output_string==='string')){cov_dszvcpt6v().b[25][0]++;cov_dszvcpt6v().s[171]++;if((cov_dszvcpt6v().b[28][0]++,options.output!=null)&&(cov_dszvcpt6v().b[28][1]++,typeof output_string==='string')){cov_dszvcpt6v().b[27][0]++;cov_dszvcpt6v().s[172]++;try{cov_dszvcpt6v().s[173]++;FileSystem.writeFileSync(options.output,output_string,'utf8');}catch(error){cov_dszvcpt6v().s[174]++;return_error=new Error(`FileSystem.writeFileSync threw an error: ${error}`);cov_dszvcpt6v().s[175]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:return_error.message});}}else{cov_dszvcpt6v().b[27][1]++;cov_dszvcpt6v().s[176]++;if(options.stdout!==true){cov_dszvcpt6v().b[29][0]++;cov_dszvcpt6v().s[177]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'warn',message:'No output options specified; defaulting to STDOUT.'});}else{cov_dszvcpt6v().b[29][1]++;}cov_dszvcpt6v().s[178]++;console.log(output_string);}}else{cov_dszvcpt6v().b[25][1]++;cov_dszvcpt6v().s[179]++;return_error=new Error('"output_string" is either null or not a string.');cov_dszvcpt6v().s[180]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'error',message:return_error.message});}}else{cov_dszvcpt6v().b[24][1]++;}//Return
cov_dszvcpt6v().s[181]++;if(return_error!==null){cov_dszvcpt6v().b[30][0]++;cov_dszvcpt6v().s[182]++;process.exitCode=1;cov_dszvcpt6v().s[183]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'crit',message:return_error.message});}else{cov_dszvcpt6v().b[30][1]++;}}/**
* @function main_Async_Test
* @async
* @access private
* @description Tests main_Async
* @returns {boolean} `true` if all test pass successfully.
* @throws {Error} If a test fails.
* @since v0.0.1
*/async function main_Async_Test(){cov_dszvcpt6v().f[8]++;const FUNCTION_NAME=(cov_dszvcpt6v().s[184]++,'main_Async_Test');//Variables
var _return=(cov_dszvcpt6v().s[185]++,false);var return_error=(cov_dszvcpt6v().s[186]++,null);//Tests
cov_dszvcpt6v().s[187]++;try{cov_dszvcpt6v().s[188]++;getDocumentationStringFromSourceString_Test();cov_dszvcpt6v().s[189]++;getDocumentationStringFromSourceBuffer_Test();}catch(error){cov_dszvcpt6v().s[190]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'crit',message:`Test failed with error: '${error}'`});cov_dszvcpt6v().s[191]++;process.exitCode=4;}//Return
cov_dszvcpt6v().s[192]++;return _return;}//#Exports and Execution
cov_dszvcpt6v().s[193]++;if(require.main===module){cov_dszvcpt6v().b[31][0]++;var _return=(cov_dszvcpt6v().s[194]++,[1,null]);const FUNCTION_NAME=(cov_dszvcpt6v().s[195]++,'MainExecutionFunction');//##Dependencies
//###Internal
//###Standard
const Path=(cov_dszvcpt6v().s[196]++,require('path'));//###External
const MakeDir=(cov_dszvcpt6v().s[197]++,require('make-dir'));const ApplicationLogWinstonInterface=(cov_dszvcpt6v().s[198]++,require('application-log-winston-interface'));const EnvPaths=(cov_dszvcpt6v().s[199]++,require('env-paths'));const CommandLineArgs=(cov_dszvcpt6v().s[200]++,require('command-line-args'));const CommandLineUsage=(cov_dszvcpt6v().s[201]++,require('command-line-usage'));//Constants
const EnvironmentPaths=(cov_dszvcpt6v().s[202]++,EnvPaths(PROCESS_NAME));const OptionDefinitions=(cov_dszvcpt6v().s[203]++,[//UI
{name:'help',alias:'h',type:Boolean,description:'Writes this help text to stdout.'},{name:'noop',alias:'n',type:Boolean,description:'Show what would be done without actually doing it.'},{name:'verbose',alias:'v',type:Boolean,description:'Verbose output to stderr.'},{name:'version',alias:'V',type:Boolean,description:'Writes version information to stdout.'},{name:'no-quick-exit',alias:'x',type:Boolean,description:'Don\'t immediately exit after printing help, version, and/or config information.'},//Input
{name:'stdin',alias:'i',type:Boolean,description:'Read input from stdin.'},{name:'input',alias:'I',type:String,description:'The path to the file to read input from.'},{name:'test',alias:'t',type:Boolean,description:'Run unit tests and exit.'},//Output
{name:'stdout',alias:'o',type:Boolean,description:'Write output to stdout.'},{name:'output',alias:'O',type:String,description:'The name of the file to write output to.'},{name:'pasteboard',alias:'p',type:Boolean,description:'Copy output to pasteboard (clipboard).'},//Config
{name:'config',alias:'c',type:Boolean,description:'Print configuration values and information to stdout.'},{name:'config-file',alias:'C',type:String,description:'Use the given config file instead of the default.'}]);//Variables
var function_return=(cov_dszvcpt6v().s[204]++,[1,null]);var quick_exit=(cov_dszvcpt6v().s[205]++,false);var source_dirname=(cov_dszvcpt6v().s[206]++,'');var parent_dirname=(cov_dszvcpt6v().s[207]++,'');var package_path=(cov_dszvcpt6v().s[208]++,'');//Logger
cov_dszvcpt6v().s[209]++;try{cov_dszvcpt6v().s[210]++;MakeDir.sync(EnvironmentPaths.log);}catch(error){cov_dszvcpt6v().s[211]++;console.error('MakeDir.sync threw: %s',error);}cov_dszvcpt6v().s[212]++;function_return=ApplicationLogWinstonInterface.InitLogger('debug.log',EnvironmentPaths.log);cov_dszvcpt6v().s[213]++;if(function_return[0]===0){cov_dszvcpt6v().b[32][0]++;cov_dszvcpt6v().s[214]++;setLogger(function_return[1]);}else{cov_dszvcpt6v().b[32][1]++;}cov_dszvcpt6v().s[215]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'debug',message:'Start of execution block.'});//Options
var Options=(cov_dszvcpt6v().s[216]++,CommandLineArgs(OptionDefinitions));//Config
cov_dszvcpt6v().s[217]++;if(Options.verbose===true){cov_dszvcpt6v().b[33][0]++;cov_dszvcpt6v().s[218]++;Logger.real_transports.console_stderr.level='debug';cov_dszvcpt6v().s[219]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'note',message:`Logger: console_stderr transport log level set to: ${Logger.real_transports.console_stderr.level}`});}else{cov_dszvcpt6v().b[33][1]++;}///Load package.json
cov_dszvcpt6v().s[220]++;try{cov_dszvcpt6v().s[221]++;source_dirname=Path.dirname(module.filename);cov_dszvcpt6v().s[222]++;package_path=Path.join(source_dirname,'package.json');cov_dszvcpt6v().s[223]++;PACKAGE_JSON=require(package_path);}catch(error){cov_dszvcpt6v().s[224]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'debug',message:`Soft error: ${error}`});cov_dszvcpt6v().s[225]++;try{cov_dszvcpt6v().s[226]++;parent_dirname=Path.dirname(source_dirname);cov_dszvcpt6v().s[227]++;package_path=Path.join(parent_dirname,'package.json');cov_dszvcpt6v().s[228]++;PACKAGE_JSON=require(package_path);}catch(error){cov_dszvcpt6v().s[229]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'debug',message:`Soft error: ${error}`});}}//Main
cov_dszvcpt6v().s[230]++;if(Options.version===true){cov_dszvcpt6v().b[34][0]++;cov_dszvcpt6v().s[231]++;console.log(PACKAGE_JSON.version);cov_dszvcpt6v().s[232]++;quick_exit=true;}else{cov_dszvcpt6v().b[34][1]++;}cov_dszvcpt6v().s[233]++;if(Options.help===true){cov_dszvcpt6v().b[35][0]++;const help_sections_array=(cov_dszvcpt6v().s[234]++,[{header:'extract-documentation-comments',content:'Simply extract documentation comments from a source file.'},{header:'Options',optionList:OptionDefinitions}]);const help_message=(cov_dszvcpt6v().s[235]++,CommandLineUsage(help_sections_array));cov_dszvcpt6v().s[236]++;console.log(help_message);cov_dszvcpt6v().s[237]++;quick_exit=true;}else{cov_dszvcpt6v().b[35][1]++;}cov_dszvcpt6v().s[238]++;if(Options.config===true){cov_dszvcpt6v().b[36][0]++;cov_dszvcpt6v().s[239]++;quick_exit=true;}else{cov_dszvcpt6v().b[36][1]++;}cov_dszvcpt6v().s[240]++;if((cov_dszvcpt6v().b[38][0]++,quick_exit===false)||(cov_dszvcpt6v().b[38][1]++,Options['no-quick-exit']===true)){cov_dszvcpt6v().b[37][0]++;cov_dszvcpt6v().s[241]++;if(Options.test===true){cov_dszvcpt6v().b[39][0]++;cov_dszvcpt6v().s[242]++;main_Async_Test();}else{cov_dszvcpt6v().b[39][1]++;cov_dszvcpt6v().s[243]++;main_Async(Options);}}else{cov_dszvcpt6v().b[37][1]++;}cov_dszvcpt6v().s[244]++;Logger.log({process:PROCESS_NAME,module:MODULE_NAME,file:FILENAME,function:FUNCTION_NAME,level:'debug',message:'End of execution block.'});}else{cov_dszvcpt6v().b[31][1]++;cov_dszvcpt6v().s[245]++;exports.setLogger=setLogger;cov_dszvcpt6v().s[246]++;exports.getDocumentationFromSourceString=getDocumentationFromSourceString;cov_dszvcpt6v().s[247]++;exports.getDocumentationFromSourceBuffer=getDocumentationFromSourceBuffer;}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiRmlsZVN5c3RlbSIsInJlcXVpcmUiLCJHZXRTdHJlYW0iLCJGSUxFTkFNRSIsIk1PRFVMRV9OQU1FIiwiUEFDS0FHRV9KU09OIiwiUFJPQ0VTU19OQU1FIiwibWFpbiIsIm1vZHVsZSIsInByb2Nlc3MiLCJhcmd2MCIsIkxvZ2dlciIsImxvZyIsInNldExvZ2dlciIsImxvZ2dlciIsInJldHVybl9lcnJvciIsIlR5cGVFcnJvciIsImNvZGUiLCJnZXREb2N1bWVudGF0aW9uU3RyaW5nRnJvbVNvdXJjZVN0cmluZyIsInNvdXJjZV9zdHJpbmciLCJvcHRpb25zIiwiYXJndW1lbnRzX2FycmF5IiwiQXJyYXkiLCJmcm9tIiwiYXJndW1lbnRzIiwiX3JldHVybiIsInJlZ2V4IiwibWF0Y2hlc19pdGVyYXRvciIsIm1hdGNoZXNfYXJyYXkiLCJkb2N1bWVudGF0aW9uIiwiRlVOQ1RJT05fTkFNRSIsImZpbGUiLCJmdW5jdGlvbiIsImxldmVsIiwibWVzc2FnZSIsIlJlZ0V4cCIsIm1hdGNoQWxsIiwiaW5kZXgiLCJsZW5ndGgiLCJnZXREb2N1bWVudGF0aW9uU3RyaW5nRnJvbVNvdXJjZVN0cmluZ19UZXN0IiwiYXJnX3Rlc3QiLCJzdWNjZXNzX3Rlc3QiLCJzYW1wbGVfaW5wdXQiLCJleHBlY3RlZF9vdXRwdXQiLCJhY3R1YWxfb3V0cHV0IiwiRXJyb3IiLCJlcnJvciIsImdldERvY3VtZW50YXRpb25TdHJpbmdGcm9tU291cmNlQnVmZmVyIiwic291cmNlX2J1ZmZlciIsImJ1ZmZlcl9zdHJpbmciLCJCdWZmZXIiLCJpc0J1ZmZlciIsInRvU3RyaW5nIiwiZ2V0RG9jdW1lbnRhdGlvblN0cmluZ0Zyb21Tb3VyY2VCdWZmZXJfVGVzdCIsInRlc3RfbmFtZSIsIm51bGxfYnVmZmVyX3Rlc3QiLCJpbnB1dCIsIm1haW5fQXN5bmMiLCJpbnB1dF9zdHJpbmciLCJvdXRwdXRfc3RyaW5nIiwic3RkaW4iLCJyZWFkRmlsZVN5bmMiLCJvdXRwdXQiLCJ3cml0ZUZpbGVTeW5jIiwic3Rkb3V0IiwiY29uc29sZSIsImV4aXRDb2RlIiwibWFpbl9Bc3luY19UZXN0IiwiUGF0aCIsIk1ha2VEaXIiLCJBcHBsaWNhdGlvbkxvZ1dpbnN0b25JbnRlcmZhY2UiLCJFbnZQYXRocyIsIkNvbW1hbmRMaW5lQXJncyIsIkNvbW1hbmRMaW5lVXNhZ2UiLCJFbnZpcm9ubWVudFBhdGhzIiwiT3B0aW9uRGVmaW5pdGlvbnMiLCJuYW1lIiwiYWxpYXMiLCJ0eXBlIiwiQm9vbGVhbiIsImRlc2NyaXB0aW9uIiwiU3RyaW5nIiwiZnVuY3Rpb25fcmV0dXJuIiwicXVpY2tfZXhpdCIsInNvdXJjZV9kaXJuYW1lIiwicGFyZW50X2Rpcm5hbWUiLCJwYWNrYWdlX3BhdGgiLCJzeW5jIiwiSW5pdExvZ2dlciIsIk9wdGlvbnMiLCJ2ZXJib3NlIiwicmVhbF90cmFuc3BvcnRzIiwiY29uc29sZV9zdGRlcnIiLCJkaXJuYW1lIiwiZmlsZW5hbWUiLCJqb2luIiwidmVyc2lvbiIsImhlbHAiLCJoZWxwX3NlY3Rpb25zX2FycmF5IiwiaGVhZGVyIiwiY29udGVudCIsIm9wdGlvbkxpc3QiLCJoZWxwX21lc3NhZ2UiLCJjb25maWciLCJ0ZXN0IiwiZXhwb3J0cyIsImdldERvY3VtZW50YXRpb25Gcm9tU291cmNlU3RyaW5nIiwiZ2V0RG9jdW1lbnRhdGlvbkZyb21Tb3VyY2VCdWZmZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsYUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBdUJBO0FBQ0M7QUFDQTswejBCQUNBLEtBQU1BLENBQUFBLFVBQVUseUJBQUdDLE9BQU8sQ0FBQyxJQUFELENBQVYsQ0FBaEIsQ0FDQTtBQUNBLEtBQU1DLENBQUFBLFNBQVMseUJBQUdELE9BQU8sQ0FBQyxZQUFELENBQVYsQ0FBZixDQUVEO0FBQ0EsS0FBTUUsQ0FBQUEsUUFBUSx5QkFBRyxtQ0FBSCxDQUFkLENBQ0EsS0FBTUMsQ0FBQUEsV0FBVyx5QkFBRyw4QkFBSCxDQUFqQixDQUNB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Q0FBVyxDQUFDSCxPQUFPLENBQUVILFlBQVYsQ0FBd0JFLE1BQU0sQ0FBRUosV0FBaEMsQ0FBNkMyQixJQUFJLENBQUU1QixRQUFuRCxDQUE2RDZCLFFBQVEsQ0FBRUYsYUFBdkUsQ0FBc0ZHLEtBQUssQ0FBRSxPQUE3RixDQUFzR0MsT0FBTyxDQUFFLHlCQUEvRyxDQUFYLEVBQ0EsQ0F4R0QsSUF3R00scURBQ0x1RSxPQUFPLENBQUM1RixTQUFSLENBQW9CQSxTQUFwQixDQURLLHlCQUVMNEYsT0FBTyxDQUFDQyxnQ0FBUixDQUEyQ0EsZ0NBQTNDLENBRksseUJBR0xELE9BQU8sQ0FBQ0UsZ0NBQVIsQ0FBMkNBLGdDQUEzQyxDQUNBIiwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2xvY2FsL2Jpbi9ub2RlXG4ndXNlIHN0cmljdCc7XG4vKipcbiogQG1vZHVsZSBFeHRyYWN0RG9jdW1lbnRhdGlvbkNvbW1lbnRzXG4qIEBmaWxlIGV4dHJhY3QtZG9jdW1lbnRhdGlvbi1jb21tZW50cy5qc1xuKiBAYWxpYXMgc291cmNlL21haW4uanNcbiogQGRlc2NyaXB0aW9uIFNpbXBseSBleHRyYWN0IGRvY3VtZW50YXRpb24gY29tbWVudHMgZnJvbSBhIHNvdXJjZSBmaWxlLlxuKiBAYXV0aG9yIEFuYWRpYW5cbiogQGxpY2Vuc2UgXHRDb3B5cmlnaHQgMjAyMCBBbmFkaWFuXG5cdFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2YgdGhpcyBcbnNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSBcbndpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgXG5tZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIFxucGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgXG5jb25kaXRpb25zOlxuXHRUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwgY29waWVzIFxub3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuXHRUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SIElNUExJRUQsIFxuSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgXG5QQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIFxuSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIFxuQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIFxuT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG4qL1xuXG4vLyNEZXBlbmRlbmNpZXNcblx0Ly8jI0ludGVybmFsXG5cdC8vIyNTdGFuZGFyZFxuXHRjb25zdCBGaWxlU3lzdGVtID0gcmVxdWlyZSgnZnMnKTtcblx0Ly8jI0V4dGVybmFsXG5cdGNvbnN0IEdldFN0cmVhbSA9IHJlcXVpcmUoJ2dldC1zdHJlYW0nKTtcblxuLy8jQ29uc3RhbnRzXG5jb25zdCBGSUxFTkFNRSA9ICdleHRyYWN0LWRvY3VtZW50YXRpb24tY29tbWVudHMuanMnO1xuY29uc3QgTU9EVUxFX05BTUUgPSAnRXh0cmFjdERvY3VtZW50YXRpb25Db21tZW50cyc7XG52YXIgUEFDS0FHRV9KU09OID0ge307XG52YXIgUFJPQ0VTU19OQU1FID0gJyc7XG5pZihyZXF1aXJlLm1haW4gPT09IG1vZHVsZSl7XG5cdFBST0NFU1NfTkFNRSA9ICdleHRyYWN0LWRvY3VtZW50YXRpb24tY29tbWVudHMnO1xufSBlbHNle1xuXHRQUk9DRVNTX05BTUUgPSBwcm9jZXNzLmFyZ3YwO1xufVxuLy8jI0Vycm9yc1xuXG4vLyNHbG9iYWwgVmFyaWFibGVzXG52YXIgTG9nZ2VyID0geyBcblx0bG9nOiAoKSA9PiB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cbn07XG4vLyNGdW5jdGlvbnNcbi8qKlxuKiBAZnVuY3Rpb24gc2V0TG9nZ2VyXG4qIEBhY2Nlc3MgcHVibGljXG4qIEBkZXNjcmlwdGlvbiBBbGxvd3MgdGhpcyBtb2R1bGUncyBmdW5jdGlvbnMgdG8gbG9nIHRoZSBnaXZlbiBsb2dnZXIgb2JqZWN0LlxuKiBAcGFyYW0gez9vYmplY3R9IGxvZ2dlciAtIFRoZSBsb2dnZXIgdG8gYmUgdXNlZCBmb3IgbG9nZ2luZyBvciBgbnVsbGAgdG8gZGlzYWJsZSBsb2dnaW5nLlxuKiBAdGhyb3dzIHtUeXBlRXJyb3J9IGBFUlJfSU5WQUxJRF9BUkdfVFlQRWAgaWYgbG9nZ2VyIGlzIG5vdCBhbiBvYmplY3Qgb3IgYG51bGxgLiBcbiogQHNpbmNlIHYwLjAuMFxuKi9cbmZ1bmN0aW9uIHNldExvZ2dlciggbG9nZ2VyICl7XG5cdHZhciByZXR1cm5fZXJyb3IgPSBudWxsO1xuXHQvL2NvbnN0IEZVTkNUSU9OX05BTUUgPSAnc2V0TG9nZ2VyJztcblx0Ly9WYXJpYWJsZXNcblx0Ly9QYXJhbWV0cmUgY2hlY2tzXG5cdGlmKCB0eXBlb2YobG9nZ2VyKSA9PT0gJ29iamVjdCcgKXtcblx0XHRpZiggbG9nZ2VyID09PSBudWxsICl7XG5cdFx0XHRsb2dnZXIgPSB7IFxuXHRcdFx0XHRsb2c6ICgpID0+IHtcblx0XHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9XG5cdH0gZWxzZXtcblx0XHRyZXR1cm5fZXJyb3IgPSBuZXcgVHlwZUVycm9yKCdQYXJhbSBcImxvZ2dlclwiIGlzIG5vdCBhbiBvYmplY3QuJyk7XG5cdFx0cmV0dXJuX2Vycm9yLmNvZGUgPSAnRVJSX0lOVkFMSURfQVJHX1RZUEUnO1xuXHRcdHRocm93IHJldHVybl9lcnJvcjtcblx0fVxuXG5cdC8vRnVuY3Rpb25cblx0TG9nZ2VyID0gbG9nZ2VyO1xuXHQvL1JldHVyblxufVxuXG4vKipcbiogQGZ1bmN0aW9uIGdldERvY3VtZW50YXRpb25TdHJpbmdGcm9tU291cmNlU3RyaW5nXG4qIEBhY2Nlc3MgcHVibGljXG4qIEBkZXNjcmlwdGlvbiBSZXR1cm5zIGEgc3RyaW5nIGNvbnRhaW5pbmcgb25seSB0aGUgY29udGVudHMgb2YgYFxcLyoqIC4uLiAqXFwvYCBzdHlsZSBkb2N1bWVudGF0aW9uIHN0cmluZ3MgZnJvbSB0aGUgZ2l2ZW4gc291cmNlLWZpbGUgc3RyaW5nLlxuKiBAcGFyYW0ge3N0cmluZ30gc291cmNlX3N0cmluZyAtIFRoZSBzb3VyY2UgZmlsZSwgYXMgYSBzdHJpbmcsIHRvIHBhcnNlIGZvciBgXFwvKiogLi4uICpcXC9gIHN0eWxlIGRvY3VtZW50YXRpb24gc3RyaW5ncy4gXG4qIEBwYXJhbSB7P09iamVjdH0gb3B0aW9ucyAtIEFkZGl0aW9uYWwgcnVuLXRpbWUgb3B0aW9ucy4gW2RlZmF1bHQ6IHt9XVxuKiBAcmV0dXJucyB7c3RyaW5nfSBBIHN0cmluZyBjb250YWluaW5nIGFsbCBvZiB0aGUgZG9jdW1lbnRhdGlvbiBzdHlsZSBjb21tZW50cywgd2l0aCB0aGUgY29tbWVudCBtYXJrZXJzIHRoZW1zZWx2ZXMgcmVtb3ZlLCBjb25jYXRlbmF0ZWQgdG9nZXRoZXIuXG4qIEB0aHJvd3Mge1R5cGVFcnJvcn0gYEVSUl9JTlZBTElEX0FSR19UWVBFYCBUaHJvd24gaWYgYHNvdXJjZV9zdHJpbmdgIGlzbid0IGEgc3RyaW5nLlxuKiBAc2luY2UgdjAuMC4xXG4qL1xuZnVuY3Rpb24gZ2V0RG9jdW1lbnRhdGlvblN0cmluZ0Zyb21Tb3VyY2VTdHJpbmcoIHNvdXJjZV9zdHJpbmcsIG9wdGlvbnMgPSB7fSApe1xuXHR2YXIgYXJndW1lbnRzX2FycmF5ID0gQXJyYXkuZnJvbShhcmd1bWVudHMpO1xuXHR2YXIgX3JldHVybjtcblx0dmFyIHJldHVybl9lcnJvcjtcblx0dmFyIHJlZ2V4ID0gbnVsbDtcblx0dmFyIG1hdGNoZXNfaXRlcmF0b3IgPSBudWxsO1xuXHR2YXIgbWF0Y2hlc19hcnJheSA9IFtdO1xuXHR2YXIgZG9jdW1lbnRhdGlvbiA9ICcnO1xuXHRjb25zdCBGVU5DVElPTl9OQU1FID0gJ2dldERvY3VtZW50YXRpb25TdHJpbmdGcm9tU291cmNlU3RyaW5nJztcblx0TG9nZ2VyLmxvZyh7cHJvY2VzczogUFJPQ0VTU19OQU1FLCBtb2R1bGU6IE1PRFVMRV9OQU1FLCBmaWxlOiBGSUxFTkFNRSwgZnVuY3Rpb246IEZVTkNUSU9OX05BTUUsIGxldmVsOiAnZGVidWcnLCBtZXNzYWdlOiBgcmVjZWl2ZWQ6ICR7YXJndW1lbnRzX2FycmF5fWB9KTtcblx0Ly9WYXJpYWJsZXNcblx0Ly9QYXJhbWV0cmUgY2hlY2tzXG5cdGlmKCB0eXBlb2Yoc291cmNlX3N0cmluZykgIT09ICdzdHJpbmcnICl7XG5cdFx0cmV0dXJuX2Vycm9yID0gbmV3IFR5cGVFcnJvcignUGFyYW0gXCJzb3VyY2Vfc3RyaW5nXCIgaXMgbm90IHN0cmluZy4nKTtcblx0XHRyZXR1cm5fZXJyb3IuY29kZSA9ICdFUlJfSU5WQUxJRF9BUkdfVFlQRSc7XG5cdFx0dGhyb3cgcmV0dXJuX2Vycm9yO1xuXHR9XG5cdC8vRnVuY3Rpb25cblx0cmVnZXggPSBuZXcgUmVnRXhwKCcvXFxcXCpcXFxcKlxcXFxuKFtcXFxcdFxcXFxuXFxcXHIgLX5dKj8pXFxcXCovJywgJ2dzJyk7XG5cdG1hdGNoZXNfaXRlcmF0b3IgPSBzb3VyY2Vfc3RyaW5nLm1hdGNoQWxsKHJlZ2V4KTtcblx0bWF0Y2hlc19hcnJheSA9IEFycmF5LmZyb20obWF0Y2hlc19pdGVyYXRvcik7XG5cdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2RlYnVnJywgbWVzc2FnZTogYG1hdGNoZXM6ICR7bWF0Y2hlc19hcnJheX1gfSk7XG5cdGZvciggdmFyIGluZGV4ID0gMDsgaW5kZXggPCBtYXRjaGVzX2FycmF5Lmxlbmd0aDsgaW5kZXgrKyApe1xuXHRcdGRvY3VtZW50YXRpb24gKz0gbWF0Y2hlc19hcnJheVtpbmRleF1bMV07XG5cdH1cblx0X3JldHVybiA9IGRvY3VtZW50YXRpb247XG5cblx0Ly9SZXR1cm5cblx0TG9nZ2VyLmxvZyh7cHJvY2VzczogUFJPQ0VTU19OQU1FLCBtb2R1bGU6IE1PRFVMRV9OQU1FLCBmaWxlOiBGSUxFTkFNRSwgZnVuY3Rpb246IEZVTkNUSU9OX05BTUUsIGxldmVsOiAnZGVidWcnLCBtZXNzYWdlOiBgcmV0dXJuZWQ6ICR7X3JldHVybn1gfSk7XG5cdHJldHVybiBfcmV0dXJuO1xufVxuXG4vKipcbiogQGZ1bmN0aW9uIGdldERvY3VtZW50YXRpb25TdHJpbmdGcm9tU291cmNlU3RyaW5nX1Rlc3RcbiogQGFjY2VzcyBwcml2YXRlXG4qIEBkZXNjcmlwdGlvbiBUZXN0cyBnZXREb2N1bWVudGF0aW9uU3RyaW5nRnJvbVNvdXJjZVN0cmluZ1xuKiBAcmV0dXJucyB7Ym9vbGVhbn0gYHRydWVgIGlmIGFsbCB0ZXN0IHBhc3Mgc3VjY2Vzc2Z1bGx5LlxuKiBAdGhyb3dzIHtFcnJvcn0gSWYgYSB0ZXN0IGZhaWxzLlxuKiBAc2luY2UgdjAuMC4xXG4qL1xuZnVuY3Rpb24gZ2V0RG9jdW1lbnRhdGlvblN0cmluZ0Zyb21Tb3VyY2VTdHJpbmdfVGVzdCgpe1xuXHRjb25zdCBGVU5DVElPTl9OQU1FID0gJ2dldERvY3VtZW50YXRpb25TdHJpbmdGcm9tU291cmNlU3RyaW5nX1Rlc3QnO1xuXHQvL1ZhcmlhYmxlc1xuXHR2YXIgX3JldHVybiA9IGZhbHNlO1xuXHR2YXIgcmV0dXJuX2Vycm9yID0gbnVsbDtcblx0dmFyIGFyZ190ZXN0ID0gZmFsc2U7XG5cdHZhciBzdWNjZXNzX3Rlc3QgPSBmYWxzZTtcblx0dmFyIHNhbXBsZV9pbnB1dCA9ICdzb21ldGhpbmdcXG4vKipcXG4qIHNob3VsZCBhcHBlYXJcXG5hbHNvIHNob3VsZCBhcHBlYXJcXG4qL1xcbnNob3VsZCBub3QgYXBwZWFyXFxuLyoqXFxuc2hvdWxkIGFwcGVhciByb3VuZCB0d29cXG4qL1xcbnNob3VsZCBub3QgYXBwZWFyXFxuJztcblx0dmFyIGV4cGVjdGVkX291dHB1dCA9ICcqIHNob3VsZCBhcHBlYXJcXG5hbHNvIHNob3VsZCBhcHBlYXJcXG5zaG91bGQgYXBwZWFyIHJvdW5kIHR3b1xcbic7XG5cdHZhciBhY3R1YWxfb3V0cHV0ID0gJyc7XG5cdC8vVGVzdHNcblx0Ly8vSW52YWxpZCBhcmcgdGVzdFxuXHR0cnl7XG5cdFx0Z2V0RG9jdW1lbnRhdGlvblN0cmluZ0Zyb21Tb3VyY2VTdHJpbmcoIHt9ICk7XG5cdFx0YXJnX3Rlc3QgPSBuZXcgRXJyb3IoYEZhaWx1cmU6IGludmFsaWQgYXJnIHRlc3Q6IGRpZG4ndCB0aHJvdyBhbiBlcnJvciB3aGVuIGl0IHJlY2VpdmVkIGFuIGludmFsaWQgYXJndW1lbnQuYCk7XG5cdFx0TG9nZ2VyLmxvZyh7cHJvY2VzczogUFJPQ0VTU19OQU1FLCBtb2R1bGU6IE1PRFVMRV9OQU1FLCBmaWxlOiBGSUxFTkFNRSwgZnVuY3Rpb246IEZVTkNUSU9OX05BTUUsIGxldmVsOiAnZXJyb3InLCBtZXNzYWdlOiBhcmdfdGVzdC5tZXNzYWdlfSk7XG5cdH0gY2F0Y2goZXJyb3Ipe1xuXHRcdGlmKCBlcnJvci5jb2RlID09PSAnRVJSX0lOVkFMSURfQVJHX1RZUEUnICl7XG5cdFx0XHRhcmdfdGVzdCA9IHRydWU7XG5cdFx0fSBlbHNle1xuXHRcdFx0YXJnX3Rlc3QgPSBlcnJvcjtcblx0XHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2Vycm9yJywgbWVzc2FnZTogYEZhaWx1cmU6IGludmFsaWQgYXJnIHRlc3Q6IHJlY2VpdmVkIGFuIHVuZXhwZWN0ZWQgZXJyb3I6ICR7ZXJyb3J9XFxuYH0pO1xuXHRcdH1cblx0fVxuXHQvLy9zdWNjZXNzIHRlc3Rcblx0dHJ5e1xuXHRcdGFjdHVhbF9vdXRwdXQgPSBnZXREb2N1bWVudGF0aW9uU3RyaW5nRnJvbVNvdXJjZVN0cmluZyggc2FtcGxlX2lucHV0ICk7XG5cdFx0aWYoIGFjdHVhbF9vdXRwdXQgPT09IGV4cGVjdGVkX291dHB1dCApe1xuXHRcdFx0c3VjY2Vzc190ZXN0ID0gdHJ1ZTtcblx0XHR9IGVsc2V7XG5cdFx0XHRzdWNjZXNzX3Rlc3QgPSBuZXcgRXJyb3IoYHN1Y2Nlc3MgdGVzdCBmYWlsZWQ6IGFjdHVhbCBvdXRwdXQ6ICcke2FjdHVhbF9vdXRwdXR9JyBkaWRuJ3QgbWF0Y2ggZXhwZWN0ZWQgb3V0cHV0ICcke2V4cGVjdGVkX291dHB1dH0nYCk7XG5cdFx0XHRMb2dnZXIubG9nKHtwcm9jZXNzOiBQUk9DRVNTX05BTUUsIG1vZHVsZTogTU9EVUxFX05BTUUsIGZpbGU6IEZJTEVOQU1FLCBmdW5jdGlvbjogRlVOQ1RJT05fTkFNRSwgbGV2ZWw6ICdlcnJvcicsIG1lc3NhZ2U6IHN1Y2Nlc3NfdGVzdC5tZXNzYWdlfSk7XG5cdFx0fVxuXHR9IGNhdGNoKGVycm9yKXtcblx0XHRzdWNjZXNzX3Rlc3QgPSBlcnJvcjtcblx0XHRMb2dnZXIubG9nKHtwcm9jZXNzOiBQUk9DRVNTX05BTUUsIG1vZHVsZTogTU9EVUxFX05BTUUsIGZpbGU6IEZJTEVOQU1FLCBmdW5jdGlvbjogRlVOQ1RJT05fTkFNRSwgbGV2ZWw6ICdlcnJvcicsIG1lc3NhZ2U6IGBGYWlsdXJlOiBzdWNjZXNzIHRlc3QgY2F1Z2h0IGFuIHVuZXhwZWN0ZWQgZXJyb3I6ICR7ZXJyb3J9XFxuYH0pO1xuXHR9XG5cdGlmKCAoYXJnX3Rlc3QgPT09IHRydWUpICYmIChzdWNjZXNzX3Rlc3QgPT09IHRydWUpICl7XG5cdFx0X3JldHVybiA9IHRydWU7XG5cdH0gZWxzZXtcblx0XHRfcmV0dXJuID0gZmFsc2U7XG5cdFx0cmV0dXJuX2Vycm9yID0gbmV3IEVycm9yKGBUZXN0IGZhaWxlZDogaW52YWxpZCBhcmcgdGVzdDogJyR7YXJnX3Rlc3R9JyBzdWNjZXNzIHRlc3Q6ICcke3N1Y2Nlc3NfdGVzdH0nXFxuYCk7XG5cdFx0dGhyb3cgcmV0dXJuX2Vycm9yO1xuXHR9XG5cdC8vUmV0dXJuXG5cdHJldHVybiBfcmV0dXJuO1xufVxuXG4vKipcbiogQGZ1bmN0aW9uIGdldERvY3VtZW50YXRpb25TdHJpbmdGcm9tU291cmNlQnVmZmVyXG4qIEBhY2Nlc3MgcHVibGljXG4qIEBkZXNjcmlwdGlvbiBSZXR1cm5zIGEgc3RyaW5nIGNvbnRhaW5pbmcgb25seSB0aGUgY29udGVudHMgb2YgYFxcLyoqIC4uLiAqXFwvYCBzdHlsZSBkb2N1bWVudGF0aW9uIHN0cmluZ3MgZnJvbSB0aGUgZ2l2ZW4gc291cmNlLWZpbGUgYnVmZmVyLlxuKiBAcGFyYW0ge0J1ZmZlcn0gc291cmNlX2J1ZmZlciAtIFRoZSBzb3VyY2UgZmlsZSwgYXMgYSBOb2RlIEJ1ZmZlciwgdG8gcGFyc2UgZm9yIGBcXC8qKiAuLi4gKlxcL2Agc3R5bGUgZG9jdW1lbnRhdGlvbiBzdHJpbmdzLiBcbiogQHBhcmFtIHs/T2JqZWN0fSBvcHRpb25zIC0gQWRkaXRpb25hbCBydW4tdGltZSBvcHRpb25zLiBbZGVmYXVsdDoge31dXG4qIEByZXR1cm5zIHtzdHJpbmd9IEEgc3RyaW5nIGNvbnRhaW5pbmcgYWxsIG9mIHRoZSBkb2N1bWVudGF0aW9uIHN0eWxlIGNvbW1lbnRzLCB3aXRoIHRoZSBjb21tZW50IG1hcmtlcnMgdGhlbXNlbHZlcyByZW1vdmUsIGNvbmNhdGVuYXRlZCB0b2dldGhlci5cbiogQHRocm93cyB7VHlwZUVycm9yfSBgRVJSX0lOVkFMSURfQVJHX1RZUEVgIFRocm93biBpZiBgc291cmNlX2J1ZmZlcmAgaXNuJ3QgYSBCdWZmZXIuXG4qIEB0aHJvd3Mge0Vycm9yfSBgRVJSX0lOVkFMSURfUkVUVVJOX1ZBTFVFYCBUaHJvd24gaWYgYHNvdXJjZV9idWZmZXIudG9TdHJpbmcoKWAgcmV0dXJucyBhbiBlbXB0eSBzdHJpbmcgb3IgYSBub24tc3RyaW5nLlxuKiBAc2luY2UgdjAuMC4xXG4qL1xuZnVuY3Rpb24gZ2V0RG9jdW1lbnRhdGlvblN0cmluZ0Zyb21Tb3VyY2VCdWZmZXIoIHNvdXJjZV9idWZmZXIgLCBvcHRpb25zID0ge30gKXtcblx0dmFyIF9yZXR1cm4gPSAnJztcblx0dmFyIHJldHVybl9lcnJvcjtcblx0dmFyIGJ1ZmZlcl9zdHJpbmcgPSAnJztcblx0Y29uc3QgRlVOQ1RJT05fTkFNRSA9ICdnZXREb2N1bWVudGF0aW9uU3RyaW5nRnJvbVNvdXJjZUJ1ZmZlcic7XG5cdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2RlYnVnJywgbWVzc2FnZTogYHJlY2VpdmVkOiAke2FyZ3VtZW50c31gfSk7XG5cdC8vVmFyaWFibGVzXG5cdC8vUGFyYW1ldHJlIGNoZWNrc1xuXHRpZiggQnVmZmVyLmlzQnVmZmVyKHNvdXJjZV9idWZmZXIpID09PSBmYWxzZSApe1xuXHRcdHJldHVybl9lcnJvciA9IG5ldyBUeXBlRXJyb3IoJ1BhcmFtIFwic291cmNlX2J1ZmZlclwiIGlzIG5vdCBCdWZmZXIuJyk7XG5cdFx0cmV0dXJuX2Vycm9yLmNvZGUgPSAnRVJSX0lOVkFMSURfQVJHX1RZUEUnO1xuXHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2Vycm9yJywgbWVzc2FnZTogYFRocm93aW5nIGVycm9yOiAke3JldHVybl9lcnJvcn1gfSk7XG5cdFx0dGhyb3cgcmV0dXJuX2Vycm9yO1xuXHR9XG5cdC8vRnVuY3Rpb25cblx0YnVmZmVyX3N0cmluZyA9IHNvdXJjZV9idWZmZXIudG9TdHJpbmcoICd1dGY4JyApO1xuXHRpZiggYnVmZmVyX3N0cmluZyAhPT0gJycgKXtcblx0XHR0cnl7XG5cdFx0XHRfcmV0dXJuID0gZ2V0RG9jdW1lbnRhdGlvblN0cmluZ0Zyb21Tb3VyY2VTdHJpbmcoIGJ1ZmZlcl9zdHJpbmcsIG9wdGlvbnMgKTtcblx0XHR9IGNhdGNoKGVycm9yKXtcblx0XHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2Vycm9yJywgbWVzc2FnZTogYFJlY2VpdmVkIGFuZCB0aHJvd2luZyBlcnJvcjogJHtlcnJvcn1gfSk7XG5cdFx0XHR0aHJvdyBlcnJvcjtcblx0XHR9XG5cdH0gZWxzZXtcblx0XHRyZXR1cm5fZXJyb3IgPSBuZXcgRXJyb3IoYCdzb3VyY2VfYnVmZmVyLnRvU3RyaW5nKCknIHJldHVybmVkIGFuIGVtcHR5IHN0cmluZyBvciBhIG5vbi1zdHJpbmc6ICR7YnVmZmVyX3N0cmluZ31gKTtcblx0XHRyZXR1cm5fZXJyb3IuY29kZSA9ICdFUlJfSU5WQUxJRF9SRVRVUk5fVkFMVUUnO1xuXHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2Vycm9yJywgbWVzc2FnZTogYFRocm93aW5nIGVycm9yOiAke3JldHVybl9lcnJvcn1gfSk7XG5cdFx0dGhyb3cgcmV0dXJuX2Vycm9yO1xuXHR9XG5cdFxuXG5cdC8vUmV0dXJuXG5cdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2RlYnVnJywgbWVzc2FnZTogYHJldHVybmVkOiAke19yZXR1cm59YH0pO1xuXHRyZXR1cm4gX3JldHVybjtcbn1cblxuLyoqXG4qIEBmdW5jdGlvbiBnZXREb2N1bWVudGF0aW9uU3RyaW5nRnJvbVNvdXJjZUJ1ZmZlcl9UZXN0XG4qIEBhY2Nlc3MgcHJpdmF0ZVxuKiBAZGVzY3JpcHRpb24gVGVzdHMgZ2V0RG9jdW1lbnRhdGlvblN0cmluZ0Zyb21Tb3VyY2VCdWZmZXJcbiogQHJldHVybnMge2Jvb2xlYW59IGB0cnVlYCBpZiBhbGwgdGVzdCBwYXNzIHN1Y2Nlc3NmdWxseS5cbiogQHRocm93cyB7RXJyb3J9IElmIGEgdGVzdCBmYWlscy5cbiogQHNpbmNlIHYwLjAuMVxuKi9cbmZ1bmN0aW9uIGdldERvY3VtZW50YXRpb25TdHJpbmdGcm9tU291cmNlQnVmZmVyX1Rlc3QoKXtcblx0Y29uc3QgRlVOQ1RJT05fTkFNRSA9ICdnZXREb2N1bWVudGF0aW9uU3RyaW5nRnJvbVNvdXJjZUJ1ZmZlcl9UZXN0Jztcblx0Ly9WYXJpYWJsZXNcblx0dmFyIF9yZXR1cm4gPSBmYWxzZTtcblx0dmFyIHJldHVybl9lcnJvciA9IG51bGw7XG5cdHZhciB0ZXN0X25hbWUgPSAnJztcblx0dmFyIGFyZ190ZXN0ID0gZmFsc2U7XG5cdHZhciBudWxsX2J1ZmZlcl90ZXN0ID0gZmFsc2U7XG5cdHZhciBzdWNjZXNzX3Rlc3QgPSBmYWxzZTtcblx0dmFyIGlucHV0ID0gbnVsbDtcblx0dmFyIGV4cGVjdGVkX291dHB1dCA9ICcqIHNob3VsZCBhcHBlYXJcXG5hbHNvIHNob3VsZCBhcHBlYXJcXG5zaG91bGQgYXBwZWFyIHJvdW5kIHR3b1xcbic7XG5cdHZhciBhY3R1YWxfb3V0cHV0ID0gJyc7XG5cdC8vVGVzdHNcblx0dGVzdF9uYW1lID0gJ2ludmFsaWQgYXJnIHRlc3QnO1xuXHR0cnl7XG5cdFx0Z2V0RG9jdW1lbnRhdGlvblN0cmluZ0Zyb21Tb3VyY2VCdWZmZXIoICdzb21ldGhpbmcnICk7XG5cdFx0YXJnX3Rlc3QgPSBuZXcgRXJyb3IoYEZhaWx1cmU6ICR7dGVzdF9uYW1lfTogZmFpbGVkIHRvIHJldHVybiBhbiBlcnJvciBldmVuIHdoZW4gYXJndW1lbnRzIHdlcmUgaW52YWxpZC5gKTtcblx0XHRMb2dnZXIubG9nKHtwcm9jZXNzOiBQUk9DRVNTX05BTUUsIG1vZHVsZTogTU9EVUxFX05BTUUsIGZpbGU6IEZJTEVOQU1FLCBmdW5jdGlvbjogRlVOQ1RJT05fTkFNRSwgbGV2ZWw6ICdlcnJvcicsIG1lc3NhZ2U6IGFyZ190ZXN0Lm1lc3NhZ2V9KTtcblx0fSBjYXRjaChlcnJvcil7XG5cdFx0aWYoIGVycm9yLmNvZGUgPT09ICdFUlJfSU5WQUxJRF9BUkdfVFlQRScgKXtcblx0XHRcdGFyZ190ZXN0ID0gdHJ1ZTtcblx0XHR9IGVsc2V7XG5cdFx0XHRhcmdfdGVzdCA9IG5ldyBFcnJvcihgRmFpbHVyZTogJHt0ZXN0X25hbWV9OiByZWNlaXZlZCBhbiB1bmV4cGVjdGVkIGVycm9yOiAnJHtlcnJvcn0nYCk7XG5cdFx0XHRMb2dnZXIubG9nKHtwcm9jZXNzOiBQUk9DRVNTX05BTUUsIG1vZHVsZTogTU9EVUxFX05BTUUsIGZpbGU6IEZJTEVOQU1FLCBmdW5jdGlvbjogRlVOQ1RJT05fTkFNRSwgbGV2ZWw6ICdlcnJvcicsIG1lc3NhZ2U6IGFyZ190ZXN0Lm1lc3NhZ2V9KTtcblx0XHR9XG5cdH1cblx0dGVzdF9uYW1lID0gJ251bGwgYnVmZmVyIHRlc3QnO1xuXHR0cnl7XG5cdFx0aW5wdXQgPSBCdWZmZXIuZnJvbSgnJywgJ3V0ZjgnKTtcblx0XHRnZXREb2N1bWVudGF0aW9uU3RyaW5nRnJvbVNvdXJjZUJ1ZmZlciggaW5wdXQgKTtcblx0XHRudWxsX2J1ZmZlcl90ZXN0ID0gbmV3IEVycm9yKGBGYWlsdXJlOiAke3Rlc3RfbmFtZX06IGZhaWxlZCB0byByZXR1cm4gYW4gZXJyb3Igd2hlbiBzZW50IGFuIGVtcHR5IGJ1ZmZlci5gKTtcblx0XHRMb2dnZXIubG9nKHtwcm9jZXNzOiBQUk9DRVNTX05BTUUsIG1vZHVsZTogTU9EVUxFX05BTUUsIGZpbGU6IEZJTEVOQU1FLCBmdW5jdGlvbjogRlVOQ1RJT05fTkFNRSwgbGV2ZWw6ICdlcnJvcicsIG1lc3NhZ2U6IG51bGxfYnVmZmVyX3Rlc3QubWVzc2FnZX0pO1xuXHR9IGNhdGNoKGVycm9yKXtcblx0XHRpZiggZXJyb3IuY29kZSA9PT0gJ0VSUl9JTlZBTElEX1JFVFVSTl9WQUxVRScgKXtcblx0XHRcdG51bGxfYnVmZmVyX3Rlc3QgPSB0cnVlO1xuXHRcdH0gZWxzZXtcblx0XHRcdG51bGxfYnVmZmVyX3Rlc3QgPSBuZXcgRXJyb3IoYEZhaWx1cmU6ICR7dGVzdF9uYW1lfTogcmVjZWl2ZWQgYW4gdW5leHBlY3RlZCBlcnJvcjogJHtlcnJvcn1gKTtcblx0XHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2Vycm9yJywgbWVzc2FnZTogbnVsbF9idWZmZXJfdGVzdC5tZXNzYWdlfSk7XG5cdFx0fVxuXHR9XG5cdHRlc3RfbmFtZSA9ICdzdWNjZXNzIHRlc3QnO1xuXHR0cnl7XG5cdFx0aW5wdXQgPSBCdWZmZXIuZnJvbSgnc29tZXRoaW5nXFxuLyoqXFxuKiBzaG91bGQgYXBwZWFyXFxuYWxzbyBzaG91bGQgYXBwZWFyXFxuKi9cXG5zaG91bGQgbm90IGFwcGVhclxcbi8qKlxcbnNob3VsZCBhcHBlYXIgcm91bmQgdHdvXFxuKi9cXG5zaG91bGQgbm90IGFwcGVhclxcbicsICd1dGY4Jyk7XG5cdFx0YWN0dWFsX291dHB1dCA9IGdldERvY3VtZW50YXRpb25TdHJpbmdGcm9tU291cmNlQnVmZmVyKCBpbnB1dCApO1xuXHRcdGlmKCBhY3R1YWxfb3V0cHV0ID09PSBleHBlY3RlZF9vdXRwdXQgKXtcblx0XHRcdHN1Y2Nlc3NfdGVzdCA9IHRydWU7XG5cdFx0fSBlbHNle1xuXHRcdFx0c3VjY2Vzc190ZXN0ID0gbmV3IEVycm9yKGBGYWlsdXJlOiAke3Rlc3RfbmFtZX06IGFjdHVhbCBvdXRwdXQgJyR7YWN0dWFsX291dHB1dH0nIGRpZG4ndCBtYXRjaCBleHBlY3RlZCBvdXRwdXQgJyR7ZXhwZWN0ZWRfb3V0cHV0fSdgKTtcblx0XHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2Vycm9yJywgbWVzc2FnZTogc3VjY2Vzc190ZXN0Lm1lc3NhZ2V9KTtcblx0XHR9XG5cdH0gY2F0Y2goZXJyb3Ipe1xuXHRcdHN1Y2Nlc3NfdGVzdCA9IG5ldyBFcnJvcihgRmFpbHVyZTogJHt0ZXN0X25hbWV9OiBjYXVnaHQgdW5leHBlY3RlZCBleGNlcHRpb246ICR7ZXJyb3J9YCk7XG5cdFx0TG9nZ2VyLmxvZyh7cHJvY2VzczogUFJPQ0VTU19OQU1FLCBtb2R1bGU6IE1PRFVMRV9OQU1FLCBmaWxlOiBGSUxFTkFNRSwgZnVuY3Rpb246IEZVTkNUSU9OX05BTUUsIGxldmVsOiAnZXJyb3InLCBtZXNzYWdlOiBzdWNjZXNzX3Rlc3QubWVzc2FnZX0pO1xuXHR9XG5cdC8vUmV0dXJuXG5cdGlmKCAoYXJnX3Rlc3QgPT09IHRydWUpICYmIChudWxsX2J1ZmZlcl90ZXN0ID09PSB0cnVlKSAmJiAoc3VjY2Vzc190ZXN0ID09PSB0cnVlKSApe1xuXHRcdF9yZXR1cm4gPSB0cnVlO1xuXHR9IGVsc2V7XG5cdFx0cmV0dXJuX2Vycm9yID0gbmV3IEVycm9yKGBUZXN0IGZhaWxlZDogaW52YWxpZCBhcmcgdGVzdDogJyR7YXJnX3Rlc3R9JyBudWxsIGJ1ZmZlciB0ZXN0OiAnJHtudWxsX2J1ZmZlcl90ZXN0fScgc3VjY2VzcyB0ZXN0OiAnJHtzdWNjZXNzX3Rlc3R9J2ApO1xuXHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2Vycm9yJywgbWVzc2FnZTogcmV0dXJuX2Vycm9yLm1lc3NhZ2V9KTtcblx0XHR0aHJvdyByZXR1cm5fZXJyb3I7XG5cdH1cblx0cmV0dXJuIF9yZXR1cm47XG59XG5cbi8qKlxuKiBAZnVuY3Rpb24gbWFpbl9Bc3luY1xuKiBAYXN5bmNcbiogQGFjY2VzcyBwcml2YXRlXG4qIEBkZXNjcmlwdGlvbiBUaGUgbWFpbiBmdW5jdGlvbi5cbiogQHBhcmFtIHs/T2JqZWN0fSBvcHRpb25zIC0gQ29tbWFuZC1saW5lIG9wdGlvbnMuIFtkZWZhdWx0OiB7fV1cbiogQHNpbmNlIHYwLjAuMVxuKi9cbmFzeW5jIGZ1bmN0aW9uIG1haW5fQXN5bmMoIG9wdGlvbnMgPSB7fSApe1xuXHR2YXIgYXJndW1lbnRzX2FycmF5ID0gQXJyYXkuZnJvbShhcmd1bWVudHMpO1xuXHR2YXIgcmV0dXJuX2Vycm9yID0gbnVsbDtcblx0Y29uc3QgRlVOQ1RJT05fTkFNRSA9ICdtYWluX0FzeW5jJztcblx0TG9nZ2VyLmxvZyh7cHJvY2VzczogUFJPQ0VTU19OQU1FLCBtb2R1bGU6IE1PRFVMRV9OQU1FLCBmaWxlOiBGSUxFTkFNRSwgZnVuY3Rpb246IEZVTkNUSU9OX05BTUUsIGxldmVsOiAnZGVidWcnLCBtZXNzYWdlOiBgcmVjZWl2ZWQ6ICR7YXJndW1lbnRzX2FycmF5fWB9KTtcblx0Ly9WYXJpYWJsZXNcblx0dmFyIGlucHV0X3N0cmluZyA9ICcnO1xuXHR2YXIgb3V0cHV0X3N0cmluZyA9ICcnO1xuXHQvL1BhcmFtZXRyZSBjaGVja3Ncblx0Ly9GdW5jdGlvblxuXHQvLy9JbnB1dFxuXHRpZiggb3B0aW9ucy5zdGRpbiA9PT0gdHJ1ZSApe1xuXHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2luZm8nLCBtZXNzYWdlOiAnUmVhZGluZyBpbnB1dCBmcm9tIFNURElOLid9KTtcblx0XHR0cnl7XG5cdFx0XHRpbnB1dF9zdHJpbmcgPSBhd2FpdCBHZXRTdHJlYW0oIHByb2Nlc3Muc3RkaW4sICd1dGY4JyApO1xuXHRcdH0gY2F0Y2goZXJyb3Ipe1xuXHRcdFx0cmV0dXJuX2Vycm9yID0gbmV3IEVycm9yKGBHZXRTdHJlYW0gdGhyZXcgYW4gZXJyb3I6ICR7ZXJyb3J9YCk7XG5cdFx0XHRMb2dnZXIubG9nKHtwcm9jZXNzOiBQUk9DRVNTX05BTUUsIG1vZHVsZTogTU9EVUxFX05BTUUsIGZpbGU6IEZJTEVOQU1FLCBmdW5jdGlvbjogRlVOQ1RJT05fTkFNRSwgbGV2ZWw6ICdlcnJvcicsIG1lc3NhZ2U6IHJldHVybl9lcnJvci5tZXNzYWdlfSk7XG5cdFx0fVxuXHR9IGVsc2UgaWYoIG9wdGlvbnMuaW5wdXQgIT0gbnVsbCApe1xuXHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2luZm8nLCBtZXNzYWdlOiAnUmVhZGluZyBpbnB1dCBmcm9tIGEgZmlsZS4nfSk7XG5cdFx0aWYoIHR5cGVvZihvcHRpb25zLmlucHV0KSA9PT0gJ3N0cmluZycgKXtcblx0XHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2RlYnVnJywgbWVzc2FnZTogYG9wdGlvbnMuaW5wdXQ6ICcke29wdGlvbnMuaW5wdXR9J2B9KTtcblx0XHRcdHRyeXtcblx0XHRcdFx0aW5wdXRfc3RyaW5nID0gRmlsZVN5c3RlbS5yZWFkRmlsZVN5bmMoIG9wdGlvbnMuaW5wdXQsICd1dGY4JyApO1xuXHRcdFx0fSBjYXRjaChlcnJvcil7XG5cdFx0XHRcdHJldHVybl9lcnJvciA9IG5ldyBFcnJvcihgRmlsZVN5c3RlbS5yZWFkRmlsZVN5bmMgdGhyZXcgYW4gZXJyb3I6ICR7ZXJyb3J9YCk7XG5cdFx0XHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2Vycm9yJywgbWVzc2FnZTogcmV0dXJuX2Vycm9yLm1lc3NhZ2V9KTtcblx0XHRcdH1cblx0XHR9IGVsc2V7XG5cdFx0XHRyZXR1cm5fZXJyb3IgPSBuZXcgRXJyb3IoJ1wib3B0aW9ucy5pbnB1dFwiIGlzIG5vdCBhIHN0cmluZy4nKTtcblx0XHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2Vycm9yJywgbWVzc2FnZTogcmV0dXJuX2Vycm9yLm1lc3NhZ2V9KTtcblx0XHR9XG5cdH0gZWxzZXtcblx0XHRyZXR1cm5fZXJyb3IgPSBuZXcgRXJyb3IoJ05vIGlucHV0IG9wdGlvbnMgc3BlY2lmaWVkLicpO1xuXHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2Vycm9yJywgbWVzc2FnZTogcmV0dXJuX2Vycm9yLm1lc3NhZ2V9KTtcblx0fVxuXHQvLy9UcmFuc2Zvcm1cblx0aWYoIHJldHVybl9lcnJvciA9PT0gbnVsbCApe1xuXHRcdGlmKCBpbnB1dF9zdHJpbmcgIT09ICcnICYmIHR5cGVvZihpbnB1dF9zdHJpbmcpID09PSAnc3RyaW5nJyApe1xuXHRcdFx0dHJ5e1xuXHRcdFx0XHRvdXRwdXRfc3RyaW5nID0gZ2V0RG9jdW1lbnRhdGlvblN0cmluZ0Zyb21Tb3VyY2VTdHJpbmcoIGlucHV0X3N0cmluZywgb3B0aW9ucyApO1xuXHRcdFx0fSBjYXRjaChlcnJvcil7XG5cdFx0XHRcdHJldHVybl9lcnJvciA9IG5ldyBFcnJvcihgZ2V0RG9jdW1lbnRhdGlvblN0cmluZ0Zyb21Tb3VyY2VTdHJpbmcgdGhyZXcgYW4gZXJyb3I6ICR7ZXJyb3J9YCk7XG5cdFx0XHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2Vycm9yJywgbWVzc2FnZTogcmV0dXJuX2Vycm9yLm1lc3NhZ2V9KTtcblx0XHRcdH1cblx0XHR9IGVsc2V7XG5cdFx0XHRyZXR1cm5fZXJyb3IgPSBuZXcgRXJyb3IoJ2lucHV0X3N0cmluZyBpcyBlaXRoZXIgbnVsbCBvciBub3QgYSBzdHJpbmcuJyk7XG5cdFx0XHRMb2dnZXIubG9nKHtwcm9jZXNzOiBQUk9DRVNTX05BTUUsIG1vZHVsZTogTU9EVUxFX05BTUUsIGZpbGU6IEZJTEVOQU1FLCBmdW5jdGlvbjogRlVOQ1RJT05fTkFNRSwgbGV2ZWw6ICdlcnJvcicsIG1lc3NhZ2U6IHJldHVybl9lcnJvci5tZXNzYWdlfSk7XG5cdFx0fVxuXHR9XG5cdC8vL091dHB1dFxuXHRpZiggcmV0dXJuX2Vycm9yID09PSBudWxsICl7XG5cdFx0aWYoIG91dHB1dF9zdHJpbmcgIT09ICcnICYmIHR5cGVvZihvdXRwdXRfc3RyaW5nKSA9PT0gJ3N0cmluZycgKXtcblx0XHRcdGlmKCBvcHRpb25zLm91dHB1dCAhPSBudWxsICYmIHR5cGVvZihvdXRwdXRfc3RyaW5nKSA9PT0gJ3N0cmluZycgKXtcblx0XHRcdFx0dHJ5e1xuXHRcdFx0XHRcdEZpbGVTeXN0ZW0ud3JpdGVGaWxlU3luYyggb3B0aW9ucy5vdXRwdXQsIG91dHB1dF9zdHJpbmcsICd1dGY4JyApO1xuXHRcdFx0XHR9IGNhdGNoKGVycm9yKXtcblx0XHRcdFx0XHRyZXR1cm5fZXJyb3IgPSBuZXcgRXJyb3IoYEZpbGVTeXN0ZW0ud3JpdGVGaWxlU3luYyB0aHJldyBhbiBlcnJvcjogJHtlcnJvcn1gKTtcblx0XHRcdFx0XHRMb2dnZXIubG9nKHtwcm9jZXNzOiBQUk9DRVNTX05BTUUsIG1vZHVsZTogTU9EVUxFX05BTUUsIGZpbGU6IEZJTEVOQU1FLCBmdW5jdGlvbjogRlVOQ1RJT05fTkFNRSwgbGV2ZWw6ICdlcnJvcicsIG1lc3NhZ2U6IHJldHVybl9lcnJvci5tZXNzYWdlfSk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZXtcblx0XHRcdFx0aWYoIG9wdGlvbnMuc3Rkb3V0ICE9PSB0cnVlICl7XG5cdFx0XHRcdFx0TG9nZ2VyLmxvZyh7cHJvY2VzczogUFJPQ0VTU19OQU1FLCBtb2R1bGU6IE1PRFVMRV9OQU1FLCBmaWxlOiBGSUxFTkFNRSwgZnVuY3Rpb246IEZVTkNUSU9OX05BTUUsIGxldmVsOiAnd2FybicsIG1lc3NhZ2U6ICdObyBvdXRwdXQgb3B0aW9ucyBzcGVjaWZpZWQ7IGRlZmF1bHRpbmcgdG8gU1RET1VULid9KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb25zb2xlLmxvZyhvdXRwdXRfc3RyaW5nKTtcblx0XHRcdH1cblx0XHR9IGVsc2V7XG5cdFx0XHRyZXR1cm5fZXJyb3IgPSBuZXcgRXJyb3IoJ1wib3V0cHV0X3N0cmluZ1wiIGlzIGVpdGhlciBudWxsIG9yIG5vdCBhIHN0cmluZy4nKTtcblx0XHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2Vycm9yJywgbWVzc2FnZTogcmV0dXJuX2Vycm9yLm1lc3NhZ2V9KTtcblx0XHR9XG5cdH1cblxuXHQvL1JldHVyblxuXHRpZiggcmV0dXJuX2Vycm9yICE9PSBudWxsICl7XG5cdFx0cHJvY2Vzcy5leGl0Q29kZSA9IDE7XG5cdFx0TG9nZ2VyLmxvZyh7cHJvY2VzczogUFJPQ0VTU19OQU1FLCBtb2R1bGU6IE1PRFVMRV9OQU1FLCBmaWxlOiBGSUxFTkFNRSwgZnVuY3Rpb246IEZVTkNUSU9OX05BTUUsIGxldmVsOiAnY3JpdCcsIG1lc3NhZ2U6IHJldHVybl9lcnJvci5tZXNzYWdlfSk7XG5cdH1cbn1cblxuLyoqXG4qIEBmdW5jdGlvbiBtYWluX0FzeW5jX1Rlc3RcbiogQGFzeW5jXG4qIEBhY2Nlc3MgcHJpdmF0ZVxuKiBAZGVzY3JpcHRpb24gVGVzdHMgbWFpbl9Bc3luY1xuKiBAcmV0dXJucyB7Ym9vbGVhbn0gYHRydWVgIGlmIGFsbCB0ZXN0IHBhc3Mgc3VjY2Vzc2Z1bGx5LlxuKiBAdGhyb3dzIHtFcnJvcn0gSWYgYSB0ZXN0IGZhaWxzLlxuKiBAc2luY2UgdjAuMC4xXG4qL1xuYXN5bmMgZnVuY3Rpb24gbWFpbl9Bc3luY19UZXN0KCl7XG5cdGNvbnN0IEZVTkNUSU9OX05BTUUgPSAnbWFpbl9Bc3luY19UZXN0Jztcblx0Ly9WYXJpYWJsZXNcblx0dmFyIF9yZXR1cm4gPSBmYWxzZTtcblx0dmFyIHJldHVybl9lcnJvciA9IG51bGw7XG5cdC8vVGVzdHNcblx0dHJ5e1xuXHRcdGdldERvY3VtZW50YXRpb25TdHJpbmdGcm9tU291cmNlU3RyaW5nX1Rlc3QoKTtcblx0XHRnZXREb2N1bWVudGF0aW9uU3RyaW5nRnJvbVNvdXJjZUJ1ZmZlcl9UZXN0KCk7XG5cdH0gY2F0Y2goZXJyb3Ipe1xuXHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2NyaXQnLCBtZXNzYWdlOiBgVGVzdCBmYWlsZWQgd2l0aCBlcnJvcjogJyR7ZXJyb3J9J2B9KTtcblx0XHRwcm9jZXNzLmV4aXRDb2RlID0gNDtcblx0fVxuXHQvL1JldHVyblxuXHRyZXR1cm4gX3JldHVybjtcbn1cblxuLy8jRXhwb3J0cyBhbmQgRXhlY3V0aW9uXG5pZihyZXF1aXJlLm1haW4gPT09IG1vZHVsZSl7XG5cdHZhciBfcmV0dXJuID0gWzEsbnVsbF07XG5cdGNvbnN0IEZVTkNUSU9OX05BTUUgPSAnTWFpbkV4ZWN1dGlvbkZ1bmN0aW9uJztcblx0Ly8jI0RlcGVuZGVuY2llc1xuXHRcdC8vIyMjSW50ZXJuYWxcblx0XHQvLyMjI1N0YW5kYXJkXG5cdFx0Y29uc3QgUGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblx0XHQvLyMjI0V4dGVybmFsXG5cdFx0Y29uc3QgTWFrZURpciA9IHJlcXVpcmUoJ21ha2UtZGlyJyk7XG5cdFx0Y29uc3QgQXBwbGljYXRpb25Mb2dXaW5zdG9uSW50ZXJmYWNlID0gcmVxdWlyZSgnYXBwbGljYXRpb24tbG9nLXdpbnN0b24taW50ZXJmYWNlJyk7XG5cdFx0Y29uc3QgRW52UGF0aHMgPSByZXF1aXJlKCdlbnYtcGF0aHMnKTtcblx0XHRjb25zdCBDb21tYW5kTGluZUFyZ3MgPSByZXF1aXJlKCdjb21tYW5kLWxpbmUtYXJncycpO1xuXHRcdGNvbnN0IENvbW1hbmRMaW5lVXNhZ2UgPSByZXF1aXJlKCdjb21tYW5kLWxpbmUtdXNhZ2UnKTtcblx0Ly9Db25zdGFudHNcblx0Y29uc3QgRW52aXJvbm1lbnRQYXRocyA9IEVudlBhdGhzKCBQUk9DRVNTX05BTUUgKTtcblx0Y29uc3QgT3B0aW9uRGVmaW5pdGlvbnMgPSBbXG5cdFx0Ly9VSVxuXHRcdHsgbmFtZTogJ2hlbHAnLCBhbGlhczogJ2gnLCB0eXBlOiBCb29sZWFuLCBkZXNjcmlwdGlvbjogJ1dyaXRlcyB0aGlzIGhlbHAgdGV4dCB0byBzdGRvdXQuJyB9LFxuXHRcdHsgbmFtZTogJ25vb3AnLCBhbGlhczogJ24nLCB0eXBlOiBCb29sZWFuLCBkZXNjcmlwdGlvbjogJ1Nob3cgd2hhdCB3b3VsZCBiZSBkb25lIHdpdGhvdXQgYWN0dWFsbHkgZG9pbmcgaXQuJyB9LFxuXHRcdHsgbmFtZTogJ3ZlcmJvc2UnLCBhbGlhczogJ3YnLCB0eXBlOiBCb29sZWFuLCBkZXNjcmlwdGlvbjogJ1ZlcmJvc2Ugb3V0cHV0IHRvIHN0ZGVyci4nIH0sXG5cdFx0eyBuYW1lOiAndmVyc2lvbicsIGFsaWFzOiAnVicsIHR5cGU6IEJvb2xlYW4sIGRlc2NyaXB0aW9uOiAnV3JpdGVzIHZlcnNpb24gaW5mb3JtYXRpb24gdG8gc3Rkb3V0LicgfSxcblx0XHR7IG5hbWU6ICduby1xdWljay1leGl0JywgYWxpYXM6ICd4JywgdHlwZTogQm9vbGVhbiwgZGVzY3JpcHRpb246ICdEb25cXCd0IGltbWVkaWF0ZWx5IGV4aXQgYWZ0ZXIgcHJpbnRpbmcgaGVscCwgdmVyc2lvbiwgYW5kL29yIGNvbmZpZyBpbmZvcm1hdGlvbi4nIH0sXG5cdFx0Ly9JbnB1dFxuXHRcdHsgbmFtZTogJ3N0ZGluJywgYWxpYXM6ICdpJywgdHlwZTogQm9vbGVhbiwgZGVzY3JpcHRpb246ICdSZWFkIGlucHV0IGZyb20gc3RkaW4uJyB9LFxuXHRcdHsgbmFtZTogJ2lucHV0JywgYWxpYXM6ICdJJywgdHlwZTogU3RyaW5nLCBkZXNjcmlwdGlvbjogJ1RoZSBwYXRoIHRvIHRoZSBmaWxlIHRvIHJlYWQgaW5wdXQgZnJvbS4nIH0sXG5cdFx0eyBuYW1lOiAndGVzdCcsIGFsaWFzOiAndCcsIHR5cGU6IEJvb2xlYW4sIGRlc2NyaXB0aW9uOiAnUnVuIHVuaXQgdGVzdHMgYW5kIGV4aXQuJyB9LFxuXHRcdC8vT3V0cHV0XG5cdFx0eyBuYW1lOiAnc3Rkb3V0JywgYWxpYXM6ICdvJywgdHlwZTogQm9vbGVhbiwgZGVzY3JpcHRpb246ICdXcml0ZSBvdXRwdXQgdG8gc3Rkb3V0LicgfSxcblx0XHR7IG5hbWU6ICdvdXRwdXQnLCBhbGlhczogJ08nLCB0eXBlOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiAnVGhlIG5hbWUgb2YgdGhlIGZpbGUgdG8gd3JpdGUgb3V0cHV0IHRvLicgfSxcblx0XHR7IG5hbWU6ICdwYXN0ZWJvYXJkJywgYWxpYXM6ICdwJywgdHlwZTogQm9vbGVhbiwgZGVzY3JpcHRpb246ICdDb3B5IG91dHB1dCB0byBwYXN0ZWJvYXJkIChjbGlwYm9hcmQpLicgfSxcblx0XHQvL0NvbmZpZ1xuXHRcdHsgbmFtZTogJ2NvbmZpZycsIGFsaWFzOiAnYycsIHR5cGU6IEJvb2xlYW4sIGRlc2NyaXB0aW9uOiAnUHJpbnQgY29uZmlndXJhdGlvbiB2YWx1ZXMgYW5kIGluZm9ybWF0aW9uIHRvIHN0ZG91dC4nIH0sXG5cdFx0eyBuYW1lOiAnY29uZmlnLWZpbGUnLCBhbGlhczogJ0MnLCB0eXBlOiBTdHJpbmcsIGRlc2NyaXB0aW9uOiAnVXNlIHRoZSBnaXZlbiBjb25maWcgZmlsZSBpbnN0ZWFkIG9mIHRoZSBkZWZhdWx0LicgfSxcblx0XTtcblx0Ly9WYXJpYWJsZXNcblx0dmFyIGZ1bmN0aW9uX3JldHVybiA9IFsxLG51bGxdO1xuXHR2YXIgcXVpY2tfZXhpdCA9IGZhbHNlO1xuXHR2YXIgc291cmNlX2Rpcm5hbWUgPSAnJztcblx0dmFyIHBhcmVudF9kaXJuYW1lID0gJyc7XG5cdHZhciBwYWNrYWdlX3BhdGggPSAnJztcblx0Ly9Mb2dnZXJcblx0dHJ5eyBcblx0XHRNYWtlRGlyLnN5bmMoIEVudmlyb25tZW50UGF0aHMubG9nICk7XG5cdH0gY2F0Y2goZXJyb3Ipe1xuXHRcdGNvbnNvbGUuZXJyb3IoJ01ha2VEaXIuc3luYyB0aHJldzogJXMnLCBlcnJvcik7XG5cdH1cblx0ZnVuY3Rpb25fcmV0dXJuID0gQXBwbGljYXRpb25Mb2dXaW5zdG9uSW50ZXJmYWNlLkluaXRMb2dnZXIoJ2RlYnVnLmxvZycsIEVudmlyb25tZW50UGF0aHMubG9nKTtcblx0aWYoIGZ1bmN0aW9uX3JldHVyblswXSA9PT0gMCApe1xuXHRcdHNldExvZ2dlciggZnVuY3Rpb25fcmV0dXJuWzFdICk7XG5cdH1cblx0TG9nZ2VyLmxvZyh7cHJvY2VzczogUFJPQ0VTU19OQU1FLCBtb2R1bGU6IE1PRFVMRV9OQU1FLCBmaWxlOiBGSUxFTkFNRSwgZnVuY3Rpb246IEZVTkNUSU9OX05BTUUsIGxldmVsOiAnZGVidWcnLCBtZXNzYWdlOiAnU3RhcnQgb2YgZXhlY3V0aW9uIGJsb2NrLid9KTtcblx0Ly9PcHRpb25zXG5cdHZhciBPcHRpb25zID0gQ29tbWFuZExpbmVBcmdzKCBPcHRpb25EZWZpbml0aW9ucyApO1xuXHQvL0NvbmZpZ1xuXHRpZiggT3B0aW9ucy52ZXJib3NlID09PSB0cnVlICl7XG5cdFx0TG9nZ2VyLnJlYWxfdHJhbnNwb3J0cy5jb25zb2xlX3N0ZGVyci5sZXZlbCA9ICdkZWJ1Zyc7XG5cdFx0TG9nZ2VyLmxvZyh7cHJvY2VzczogUFJPQ0VTU19OQU1FLCBtb2R1bGU6IE1PRFVMRV9OQU1FLCBmaWxlOiBGSUxFTkFNRSwgZnVuY3Rpb246IEZVTkNUSU9OX05BTUUsIGxldmVsOiAnbm90ZScsIG1lc3NhZ2U6IGBMb2dnZXI6IGNvbnNvbGVfc3RkZXJyIHRyYW5zcG9ydCBsb2cgbGV2ZWwgc2V0IHRvOiAke0xvZ2dlci5yZWFsX3RyYW5zcG9ydHMuY29uc29sZV9zdGRlcnIubGV2ZWx9YH0pO1xuXHR9XG5cdC8vL0xvYWQgcGFja2FnZS5qc29uXG5cdHRyeXtcblx0XHRzb3VyY2VfZGlybmFtZSA9IFBhdGguZGlybmFtZSggbW9kdWxlLmZpbGVuYW1lICk7XG5cdFx0cGFja2FnZV9wYXRoID0gUGF0aC5qb2luKCBzb3VyY2VfZGlybmFtZSwgJ3BhY2thZ2UuanNvbicgKTtcblx0XHRQQUNLQUdFX0pTT04gPSByZXF1aXJlKHBhY2thZ2VfcGF0aCk7XG5cdH0gY2F0Y2goZXJyb3Ipe1xuXHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2RlYnVnJywgbWVzc2FnZTogYFNvZnQgZXJyb3I6ICR7ZXJyb3J9YH0pO1xuXHRcdHRyeXtcblx0XHRcdHBhcmVudF9kaXJuYW1lID0gUGF0aC5kaXJuYW1lKCBzb3VyY2VfZGlybmFtZSApO1xuXHRcdFx0cGFja2FnZV9wYXRoID0gUGF0aC5qb2luKCBwYXJlbnRfZGlybmFtZSwgJ3BhY2thZ2UuanNvbicgKTtcblx0XHRcdFBBQ0tBR0VfSlNPTiA9IHJlcXVpcmUocGFja2FnZV9wYXRoKTtcblx0XHR9IGNhdGNoKGVycm9yKXtcblx0XHRcdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2RlYnVnJywgbWVzc2FnZTogYFNvZnQgZXJyb3I6ICR7ZXJyb3J9YH0pO1xuXHRcdH1cblx0fVxuXHQvL01haW5cblx0aWYoIE9wdGlvbnMudmVyc2lvbiA9PT0gdHJ1ZSApe1xuXHRcdGNvbnNvbGUubG9nKFBBQ0tBR0VfSlNPTi52ZXJzaW9uKTtcblx0XHRxdWlja19leGl0ID0gdHJ1ZTtcblx0fVxuXHRpZiggT3B0aW9ucy5oZWxwID09PSB0cnVlICl7XG5cdFx0Y29uc3QgaGVscF9zZWN0aW9uc19hcnJheSA9IFtcblx0XHRcdHtcblx0XHRcdFx0aGVhZGVyOiAnZXh0cmFjdC1kb2N1bWVudGF0aW9uLWNvbW1lbnRzJyxcblx0XHRcdFx0Y29udGVudDogJ1NpbXBseSBleHRyYWN0IGRvY3VtZW50YXRpb24gY29tbWVudHMgZnJvbSBhIHNvdXJjZSBmaWxlLicsXG5cdFx0XHR9LFxuXHRcdFx0e1xuXHRcdFx0XHRoZWFkZXI6ICdPcHRpb25zJyxcblx0XHRcdFx0b3B0aW9uTGlzdDogT3B0aW9uRGVmaW5pdGlvbnNcblx0XHRcdH1cblx0XHRdXG5cdFx0Y29uc3QgaGVscF9tZXNzYWdlID0gQ29tbWFuZExpbmVVc2FnZShoZWxwX3NlY3Rpb25zX2FycmF5KTtcblx0XHRjb25zb2xlLmxvZyhoZWxwX21lc3NhZ2UpO1xuXHRcdHF1aWNrX2V4aXQgPSB0cnVlO1xuXHR9XG5cdGlmKCBPcHRpb25zLmNvbmZpZyA9PT0gdHJ1ZSApe1xuXHRcdHF1aWNrX2V4aXQgPSB0cnVlO1xuXHR9XG5cdGlmKCBxdWlja19leGl0ID09PSBmYWxzZSB8fCBPcHRpb25zWyduby1xdWljay1leGl0J10gPT09IHRydWUgKXtcblx0XHRpZiggT3B0aW9ucy50ZXN0ID09PSB0cnVlICl7XG5cdFx0XHRtYWluX0FzeW5jX1Rlc3QoKTtcblx0XHR9IGVsc2V7XG5cdFx0XHRtYWluX0FzeW5jKCBPcHRpb25zICk7XG5cdFx0fVxuXHR9XG5cdExvZ2dlci5sb2coe3Byb2Nlc3M6IFBST0NFU1NfTkFNRSwgbW9kdWxlOiBNT0RVTEVfTkFNRSwgZmlsZTogRklMRU5BTUUsIGZ1bmN0aW9uOiBGVU5DVElPTl9OQU1FLCBsZXZlbDogJ2RlYnVnJywgbWVzc2FnZTogJ0VuZCBvZiBleGVjdXRpb24gYmxvY2suJ30pO1xufSBlbHNle1xuXHRleHBvcnRzLnNldExvZ2dlciA9IHNldExvZ2dlcjtcblx0ZXhwb3J0cy5nZXREb2N1bWVudGF0aW9uRnJvbVNvdXJjZVN0cmluZyA9IGdldERvY3VtZW50YXRpb25Gcm9tU291cmNlU3RyaW5nO1xuXHRleHBvcnRzLmdldERvY3VtZW50YXRpb25Gcm9tU291cmNlQnVmZmVyID0gZ2V0RG9jdW1lbnRhdGlvbkZyb21Tb3VyY2VCdWZmZXI7XG59XG5cbiJdfQ==